This file received at Mthvax.CS.Miami.EDU  90/03/02 03:35:17




HOMEBREW Digest #369                             Fri 02 March 1990




        FORUM ON BEER, HOMEBREWING, AND RELATED ISSUES
                Rob Gardner, Digest Coordinator




Contents:
  cooking with beer (Mark Stevens) <stevens`at`stsci.edu>
  carbonation (Mark Stevens) <stevens`at`stsci.edu>
  Homebrew Digest #368 (March 01, 1990) (Michael Bergman)
  re:        yeasts and rumors (florianb)
  re: mild ale malt (Darryl Richman)
  re: Volume vs. weight measurement (Chris Shenton)
  Recipe log sheet -- LaTeX format (Chris Shenton)
  mild ale malt (Pete Soper)
  Homebrew Digest #365 (February 26, 1990) (Wayne Allen)
  plastic keg problems (Mike Charlton)
  boil over preventer (mage!lou)
  RE: soft drink-like carbonation... (Dick Schoeller - ZKO2-3/R56 - DTN 381-2965  28-Feb-1990 1615)
  re: Volume vs. weight measurement (Chris Shenton)
  Recipe log sheet -- LaTeX format (Chris Shenton)
  First Time Mead Brewers (Mike Zentner)
  Sierra Nevada yeast culturing (Dave Suurballe)
  Re: The purpose of info-gcc.
  Homebrew Digest: Recipe log sheet
  Brew sheet
  Great LaTeX recipe log!
  Thanks
  Recipe log sheet
  I'm a bitter man :-)
  re:        #368, cooling, logging, and heading (florianb)
  beer pancakes (Marty Albini)
  immersion-type wort chiller (concern) (Doug Roberts `at` Los Alamos National Laboratory)
  Re: Recipes of a different nature (John S. Watson)




Send submissions to homebrew%hpfcmr`at`hplabs.hp.com
Send requests to homebrew-request%hpfcmr`at`hplabs.hp.com
Archives available from netlib`at`mthvax.cs.miami.edu


----------------------------------------------------------------------


Date: Thu, 1 Mar 90 08:58:08 EST
From: (Mark Stevens) <stevens`at`stsci.edu>
Subject: cooking with beer




In Homebrew Digest #368, Mark Leone wrote:
> Anyone have any good *food* recipes using beer as an ingredient?


Jack Erickson wrote a book called "Great Cooking with Beer" (1989, Red 
Brick Press, Reston, VA).  The book includes quite a few recipes, from
standbys like Beer Bread, to some more unusual things, like using beer
in cake.  To tell the truth though, I was somewhat disappointed in this
book because Erickson puts entirely too much filler in the book...I really
don't give a rat's ass about what foods were served at tastings he
conducted at local restaurants...I want a *BEER-FOOD COOKBOOK*.  


Erickson could easily have found more recipes that use beer. In just
thumbing through it I realized that he did not include things like,
* Steamed Chesapeake Blue Crabs
* Chili 


I've got some recipes that aren't in Erickson's book, these include:
* Belgian Fruit
* Stout & Sour Meatballs
* Hoppy Lentil Soup 


Some other recipes I've heard of, but don't have, include:
* Black Bean Soup
* Cherry Creek Pie (made with Kriek lambic ale)


Last year I was in Boston and stopped by the Commonwealth Brewery. They
served up a delicious plate of mussels cooked in stout.  I accompanied
the meal with a glass of stout, then a winter warmer for dessert and
was in heaven all night....


Erickson's book is a good starting point in finding these recipes, and
it's pretty reasonably priced--I believe I paid about $12.  In "Great
Cooking..." Erickson alluded to a second volume coming down the pike,
I hope he treats the cooking part more seriously in the 2nd volume and
omits the extraneous generalities (I want cow, not bull).


Bon appetit,
- ---Mark Stevens
   stevens`at`ra.stsci.edu


------------------------------


Date: Thu, 1 Mar 90 08:58:35 EST
From: (Mark Stevens) <stevens`at`stsci.edu>
Subject: carbonation




In Homebrew Digest #368, Max Newman writes:
>After one week...I tried one bottle. The beer tasted fine but had little
>carbonation.


Your beer will probably be fine.  When I sampled my last batch of brown
ale after only one week it too was rather flat.  I let the beer sit 
another 3-4 weeks before opening another bottle; this bottle poured
with a very nice head and subsequent bottles were fine.
- --Mark Stevens
  stevens`at`ra.stsci.edu


------------------------------


Date: Thu, 1 Mar 90 10:09:50 EST
From: bergman`at`m2c.org (Michael Bergman)
Subject: Homebrew Digest #368 (March 01, 1990)




Mark R. Leone  <mleone`at`cs.cmu.edu> asks for recipes for food with beer
as an ingredient.  I have never had them myself, but have heard lots
of praise heaped on the "shrimp steamed in beer" at Poli's Seafood in
Squirrel Hill, Pittsburgh.  A happy coincidence that Mr. Leone is
currently in the right city to take advantage of this!  Let's hope he
likes shrimp (I don't, which is why I've never tried Poli's)


Any good bread book should have a recipe for beer bread, in which beer
is used as the source of the yeast, as well as replacing some of the
liquid.  Most mediaeval recipes for either bread or cake call for beer
for this purpose, since standardized freeze dried yeast packets were
not yet available ... any of the mediaevalists out there want to post
a recipe?


- --mike bergman
              Massachusetts Microelectronics Center
              75 North Drive, Westborough, MA  01581, USA +1 (508) 870-0312
        UUCP: (...harvard)!m2c!bergman    INTERNET:   bergman`at`m2c.org         




------------------------------


Date: 01 Mar 90 08:06:08 PST (Thu)
From: florianb`at`tekred.cna.tek.com
Subject: re:        yeasts and rumors


A couple of issues ago, Mark Stevens commented on my question about
SN yeast:


>good, pure strain.  Heurich said that if a brewery does NOT use
>only a single strain that they risk infection of the strains
>by each other and that by restricting your brewing to that single
>strain you can better maintain its purity.  This 


However, in the same issue, BRW commented that SN uses two yeasts in their
brewing.  I've heard a similar claim from other sources.


This sort of discussion isn't really important to my brewing, since I use
either package or liquid yeast.  But it does serve as an example of how
the brewing industry and hobby are full of rumors everywhere you look.


Case in point:  I made two identical brews using the Wyeast British yeast
and hydrated Red Star ale yeast.  The Red Star produced a cleaner, clearer,
tastier beer, a whole lot faster.  Other Wyeast ale yeasts have, however,
given me much better performance than the dry yeast.


Florian the doubting.




------------------------------


Date: Thu, 1 Mar 90 09:00:33 PST
From: darryl`at`ism.isc.com (Darryl Richman)
Subject: re: mild ale malt


From: Pete Soper <soper`at`maxzilla.encore.com>
"  I recently got some Munton and Fison mild ale malt but could get
"no color information. If any of you know the approximate lovibond
"or EBC rating of this grain I'd greatly appreciate it if you could
"let me know via email. If you've had experience with this grain and
"could even say something like "It is a bit lighter than light Munich",
"or "Twice as dark as British pale malt" that would be very helpful.
"Thanks.


Please pass along the source of your malt--I'd like to order some.  Mild
malt is darker than the pale Munich malt generally available.  I would
guess that it is about 10 Lovibond.  The local shop once had mild malt
but is unable to obtain it any more.  I made several Mild Ales from it,
with OGs as low as 31, that turned out very pleasant.  Without informing
someone that they were drinking a low alcohol beer (2-2.5% v/v), they
would never suspect it.  The perfect drink for parties.


                --Darryl Richman


------------------------------


Date: Thu, 1 Mar 90 13:50:04 est
From: Chris Shenton <chris`at`asylum.gsfc.nasa.gov>
Subject: re: Volume vs. weight measurement


(Mark Stevens) writes:
> Dick is absolutely right that you can't measure whole hops (or even
> pellets) by the cup.


I got one of those cheesey little drug-scales, the kind they sell at head
shops (er, excuse me: smoking paraphernalia emporiums) for $7.00. It's not
too much of a pain to clip on a baggie (er, zip-loc sandwich bag), fill
with hops, and subtract the weight of aforementioned baggie. I'd hate to
have to guess weights that small. Price seems fair for what it does.


Ultimately, I'd get one of the $40 - $60 Sohnle (or whatever) scales which
read up to about 8 Lb, in 1/2 ounce increments, but it's too expensive now.
For pound increments, I'd be measuring grain, anyway, and volume measures
seem tolerable for that.


Cheers!


PS:
        I use the AAU measures for my records, in order to account for
alpha acid content of the particular hops. As soon as I can figure out the
other, more professional system (IBU's?) I'll probably switch over; the
advantage there is that the measure of bitterness is *not* dependant on the
amount of beer you make.
_______________________________________________________________________________
Internet:  chris`at`asylum.gsfc.nasa.gov (128.183.10.155)      NASA/GSFC: Code 735
UUCP:      ...!uunet!asylum.gsfc.nasa.gov!chris             Greenbelt, MD 20771
SPAN:      PITCH::CHRIS                                            301-286-6093


------------------------------


Date: Thu, 1 Mar 90 13:50:19 est
From: Chris Shenton <chris`at`asylum.gsfc.nasa.gov>
Subject: Recipe log sheet -- LaTeX format


I've been hacking a recipe log sheet so I can keep all my info consistent,
organized, and compact. It fits on one page, so there's room on the back
for plenty of comments.


There's plenty of room for all kinds of things, I think. I designed it to
be very quick to fill in, with as many check-the-appropriate-box-isms as I
could. 


I haven't done all-grain yet, so the format for that data may be a bit off.
Also, I'm still tweaking it, so send me any feedback you have; I'd like to
hear your comments.


Also, if you don't have LaTeX, I can send you a Postscript formatted
version.
- -------------------- Cut here --------------------
%%% brew-sheet.tex
%%%
%%% 1990 Jan 24  Wed 16:19    Chris Shenton  (chris`at`asylum.GSFC.NASA.GOV)
%%% Moved amount columns to beginning of tables.
%%% Created batch name header.
%%% Added `dry' box to extracts.
%%%
%%% 1990 Jan 25  Thu 16:15    Chris Shenton  (chris`at`asylum.GSFC.NASA.GOV)
%%% Deleted grain names from Malts, Grains, and Adjuncts -- too much space.
%%% Added Acid rest to Procedure.
%%%
%%% 1990 Feb 28  Wed 15:23    Chris Shenton  (chris`at`asylum.GSFC.NASA.GOV)
%%% Tweaked number of lines in some of the entry sections.
%%% Instead of including `macros', define the commands here; this way,
%%% remote users can use the file.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


\documentstyle[twocolumn,twoside]{article}


\pagestyle{myheadings}




%%%
%%% Commands
%%%


\newcommand{\degree}{$^{\circ}$}
\newcommand{\degrees}[2]{#1\degree #2}
\newcommand{\setnewlength}[2]{\newlength{#1}\setlength{#1}{#2}}




%%%
%%% Page size and style
%%%


\setlength{\footheight}{0in}
\setlength{\oddsidemargin}{-0.25in} % ?? also evensidemargin ??
\setlength{\textwidth}{7.5in}
\setlength{\textheight}{10.0in}
\setlength{\topmargin}{-0.5in}


\setlength{\parindent}{0in}


\markright{Batch name:}


\raggedbottom


\renewcommand{\thepage}{}        % Prevent page numbers




%%%
%%% Various widths for lines, blanks, and so on
%%%


\setnewlength{\underblank}{-0.02in}
\setnewlength{\blankwidth}{0.25in}
\setnewlength{\thinline}{0.005in}
\setnewlength{\onecolumnwidth}{0.5\textwidth}
\addtolength{\onecolumnwidth}{-\columnsep}




%%%
%%% Command macros for the various sections and section entries.
%%%


\newcommand{\mysec}[1]{\section*{#1}}


\newcommand{\ledgerline}{\rule{\onecolumnwidth}{\thinline}\\}


\newcommand{\extract}[4]{#1 & #2 & #3 & #4 \\}
\newcommand{\extractentry}{\extract{}{}{$\Box$}{$\Box$} \hline}


\newcommand{\malt}[5]{#1 & #2 & #3 & #4 & #5 \\}
\newcommand{\maltentry}{\malt{}{}{}{}{} \hline} % color (#3) not used


\newcommand{\hop}[6]{#1 & #2 & #3 & #4 & #5 & #6 \\}
\newcommand{\hopentry}{\hop{}{}{}{$\Box$\rule[\underblank]{\blankwidth}{\thinline}}{$\Box$}{$\Box$} \hline}


\newcommand{\yeast}[6]{#1 & #2 & #3 & #4 & #5 & #6 \\}
\newcommand{\yeastentry}{\yeast{}{}{$\Box$}{$\Box$}{$\Box$}{$\Box$} \hline}


\newcommand{\adjunct}[4]{#1 & #2 & #3 & #4 \\}
\newcommand{\adjunctentry}{\adjunct{}{}{}{} \hline}


\newcommand{\procedure}[5]{#1 & #2 & #3 & #4 & #5 \\}
\newcommand{\procedureentry}[5]{\procedure{#1}{#2}{#3}{#4}{#5} \hline}


\newcommand{\record}[3]{#1 & #2 & #3 \\}
\newcommand{\recordentry}{\record{}{}{} \hline}


\newcommand{\blankentry}[1]{#1 \rule[\underblank]{\blankwidth}{\thinline}}




%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


\begin{document}




\mysec{Extracts and Kits}


\begin{tabular}{|l||l|c|c|}
\hline
\extract{Lb}{\makebox[2.0in][l]{Brand and Name}}{Hopped}{Dry}
\hline
\hline
\extractentry                        % 1
\extractentry                        % 2
\extractentry                        % 3
\extractentry                        % 4
\end{tabular}






\mysec{Malts, Grains and Adjuncts}
\begin{tabular}{|l||l|c|l|l|}
\hline
\malt{Lb [oz]}{\makebox[1.25in][l]{Variety}}{\degrees{}{L}}{Brand}{Country}
\hline
\hline
\maltentry                        % 1
\maltentry                        % 2
\maltentry                        % 3
\maltentry                        % 4
\maltentry                        % 5
\maltentry                        % 6
\maltentry                        % 7
\maltentry                        % 8
\maltentry                        % 9
\end{tabular}






\mysec{Hops}


\begin{tabular}{|l||l|l|ccc|}
\hline
\hop{AAU}{\makebox[1in][l]{Variety}}{Form}{Boil}{Steep}{Dry}
\hop{   }{                         }{    }{(min)}{    }{   }
\hline
\hline
\hopentry                        % 1
\hopentry                        % 2
\hopentry                        % 3
\hopentry                        % 4
\hopentry                        % 5
\hopentry                        % 6
\hopentry                        % 7
\hopentry                        % 8
\hopentry                        % 9
\end{tabular}






\mysec{Yeast}


\begin{tabular}{|l||l|cc|cc|}
\hline
\yeast{Amount}{Brand and style}{Ale}{Lager}{Dry}{Liquid}
\hline
\hline
\yeastentry
\yeastentry
\yeastentry
\end{tabular}






\mysec{Additives and Other Ingredients}


\begin{tabular}{|l||l|c|l|}
\hline
\adjunct{Amount}{Ingredient}{Boil}{Procedure Description}
\adjunct{      }{          }{(min)}{                    }
\hline
\adjunct{}{}{---}{Priming}
\hline
\adjunctentry
\adjunctentry
\adjunctentry
\adjunctentry
\adjunctentry
\end{tabular}






\mysec{Procedure}


\begin{tabular}{lll}
Mash water                & \blankentry{Temperature}        & \blankentry{Amount} \\
Mash-in                        & \blankentry{Temperature}        & \blankentry{pH} \\
Protein Rest                & \blankentry{Temperature}        & \blankentry{Time} \\
Acid Rest                & \blankentry{Temperature}        & \blankentry{Time} \\
Starch Conversion        & \blankentry{Temperature}        & \blankentry{Time} \\
Mash-out                & \blankentry{Temperature}        & \blankentry{Time} \\
Sparge Water                & \blankentry{Temperature}        & \blankentry{Amount} \\
Boil                        & \blankentry{Time} \\
Yeast Pitch                & \blankentry{Temperature}        & \blankentry{pH} \\
\end{tabular}






\mysec{Notes}


\ledgerline                        % underfull \hbox (badness 10000)
\ledgerline
\ledgerline
\ledgerline
\ledgerline
\ledgerline
\ledgerline
\ledgerline
\ledgerline
\ledgerline
\ledgerline
\ledgerline
\ledgerline
\ledgerline
\ledgerline
\ledgerline






\mysec{Record}


\begin{tabular}{|l|l|l|}
\hline
\record{Date}{SG}{\makebox[2.7in][l]{Action or Observation}}
\hline
\hline
\record{    }{  }{Original gravity} 
\hline
\recordentry
\recordentry
\recordentry
\recordentry
\recordentry
\recordentry
\recordentry
\recordentry
\recordentry
\recordentry
\recordentry
\recordentry
\recordentry
\recordentry
\recordentry
\recordentry
\recordentry
\recordentry
\end{tabular}


\end{document}








suggested one month of waiting, or should I use more priming
sugar in subsequent batches?


- ------------------------------


Date: Wed, 28 Feb 90 11:20:56 EST
From: Pete Soper <soper`at`maxzilla.encore.com>
Subject: mild ale malt


  I recently got some Munton and Fison mild ale malt but could get
no color information. If any of you know the approximate lovibond 
or EBC rating of this grain I'd greatly appreciate it if you could 
let me know via email. If you've had experience with this grain and
could even say something like "It is a bit lighter than light Munich",
or "Twice as dark as British pale malt" that would be very helpful. 
Thanks.
 - ----------------------------------------------------------------------
Pete Soper      The George Fix book is finally out!     +1 919 481 3730
soper`at`encore.com
Encore Computer Corp, 901 Kildaire Farm Rd, bldg D, Cary, NC 27511 USA


- ------------------------------


Date: Wed, 28 Feb 90 10:26:00 CST
From: wa%cadillac.cad.mcc.com`at`MCC.COM (Wayne Allen)
Subject: Homebrew Digest #365 (February 26, 1990)




In #365 Louis Clark writes:


>I have always used a glass (pyrex?) or stainless "boil over preventer" ...


Louis, what is this you refer to? Where do you get it?


Inquiring minds, etc.


wa


- ------------------------------


Date: 28 Feb 90 11:41 -0600
From: Mike Charlton <umcharl3`at`ccu.umanitoba.ca>
Subject: plastic keg problems


In digest #367, Jeff Casey talks about problems he's had with things breaking
on his plastic keg and problems with overcarbonation.  Luckily, I haven't
had anything break on my keg, but I too have had problems with beer coming
out all foam.  I don't know about Jeff's problem, but it turns out that
with me the excessive foaminess was not a product of overcarbonation.  It
was a problem of the spigot being too short.  Sticking a 2 inch length of
flexible tubing on the end of the spigot solved the problem by introducing
a bit of back pressure.  However, I now have a new problem.  Even though
I can draw a pint of beer in little under a second (Well, I have to only half
open the spigot so that it doesn't shoot off the bottom of the mug and go
all over me...) The beer is not carbonated enough (at least for my taste).
It's not a big problem (and to tell the truth, I've only tried the keg once
so far) but I'm curious how something with such an obvious amount of pressure
could be undercarbonated.
                   Mike


- ------------------------------


Date: Wed, 28 Feb 90 13:46:28 MST
From: hplabs!mage!lou
Subject: boil over preventer




In digest #367 a.e.mossburg writes:


#>I have always used a glass (pyrex?) or stainless "boil over preventer" after I
#>spent two days cleaning my first batch out of the stove.  While this is quite
#>effective at preventing boil over, I wonder what effect it might be having
#>on my hot break.  I'm not real sure what to expect from a hot break so I can't
#>tell if it's making any difference.  Any suggestions out there?


#What is a "boil over preventer"?


You may know of this by some other name such as "pot watcher".


A boil over preventer is a device available in the housewares section of a
supermarket and in some hardware stores for about $2.  It has a disc-like shape
and is roughly 3 inches in diameter.  My glass one was thick around the rim and
thinner in the middle, somewhat like the shape of a red blood cell.  I managed
to crack this one from thermal shock and replaced it with one made from
stainless steel.  It resembles the lid of a tin can except the indentations are
more pronounced and the rim is curved down somewhat (although it clearly is not
symmetric I just toss it in without regard to which side is up and it works
fine).  Both of them have channels to permit gasses to escape from underneath
them.


To use the device, just put it in a pot to be boiled and forget it.  It *will*
eliminate boil over problems.


Louis Clark
mage!lou`at`ncar.ucar.EDU




- ------------------------------


Date: Wed, 28 Feb 90 13:16:36 PST
From: Dick Schoeller - ZKO2-3/R56 - DTN 381-2965  28-Feb-1990 1615 <schoeller`at`4gl.enet.dec.com>
Subject: RE: soft drink-like carbonation...


>or...) The beer isn't flat, though, as you can see and feel the bubbles
>when you drink, it's just that there's no head. What could be a cure
>for this? Thanks a lot in advance.
 
Try adding some crystal malt or cara-pils to your recipes.  These contribute
dextrins which aid head retention and add to the body of the beer.


Dick Schoeller                  | schoeller`at`4gl.enet.dec.com
Digital Equipment Corporation   | 603-881-2965
110 Spit Brook Rd., ZKO2-3/R56  | "Either Judaism has something to say to the
Nashua, NH 03062-2642           | world or it has nothing to say to Jews."
                                |                             - Dennis Prager




- ------------------------------


Date: Wed, 28 Feb 90 17:16:11 est
From: Chris Shenton <chris`at`asylum.gsfc.nasa.gov>
Subject: re: Volume vs. weight measurement


(Mark Stevens) writes:
> Dick is absolutely right that you can't measure whole hops (or even
> pellets) by the cup.


I got one of those cheesey little drug-scales, the kind they sell at head
shops (er, excuse me: smoking paraphernalia emporiums) for $7.00. It's not
too much of a pain to clip on a baggie (er, zip-loc sandwich bag), fill
with hops, and subtract the weight of aforementioned baggie. I'd hate to
have to guess weights that small. Price seems fair for what it does.


Ultimately, I'd get one of the $40 - $60 Sohnle (or whatever) scales which
read up to about 8 Lb, in 1/2 ounce increments, but it's too expensive now.
For pound increments, I'd be measuring grain, anyway, and volume measures
seem tolerable for that.


Cheers!


PS:
        I use the AAU measures for my records, in order to account for
alpha acid content of the particular hops. As soon as I can figure out the
other, more professional system (IBU's?) I'll probably switch over; the
advantage there is that the measure of bitterness is *not* dependant on the
amount of beer you make.
_______________________________________________________________________________
Internet:  chris`at`asylum.gsfc.nasa.gov (128.183.10.155)      NASA/GSFC: Code 735
UUCP:      ...!uunet!asylum.gsfc.nasa.gov!chris             Greenbelt, MD 20771
SPAN:      PITCH::CHRIS                                            301-286-6093


- ------------------------------


Date: Wed, 28 Feb 90 17:16:26 est
From: Chris Shenton <chris`at`asylum.gsfc.nasa.gov>
Subject: Recipe log sheet -- LaTeX format


I've been hacking a recipe log sheet so I can keep all my info consistent,
organized, and compact. It fits on one page, so there's room on the back
for plenty of comments.


There's plenty of room for all kinds of things, I think. I designed it to
be very quick to fill in, with as many check-the-appropriate-box-isms as I
could. 


I haven't done all-grain yet, so the format for that data may be a bit off.
Also, I'm still tweaking it, so send me any feedback you have; I'd like to
hear your comments.


Also, if you don't have LaTeX, I can send you a Postscript formatted
version.
 - -------------------- Cut here --------------------
%%% brew-sheet.tex
%%%
%%% 1990 Jan 24  Wed 16:19    Chris Shenton  (chris`at`asylum.GSFC.NASA.GOV)
%%% Moved amount columns to beginning of tables.
%%% Created batch name header.
%%% Added `dry' box to extracts.
%%%
%%% 1990 Jan 25  Thu 16:15    Chris Shenton  (chris`at`asylum.GSFC.NASA.GOV)
%%% Deleted grain names from Malts, Grains, and Adjuncts -- too much space.
%%% Added Acid rest to Procedure.
%%%
%%% 1990 Feb 28  Wed 15:23    Chris Shenton  (chris`at`asylum.GSFC.NASA.GOV)
%%% Tweaked number of lines in some of the entry sections.
%%% Instead of including `macros', define the commands here; this way,
%%% remote users can use the file.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


\documentstyle[twocolumn,twoside]{article}


\pagestyle{myheadings}




%%%
%%% Commands
%%%


\newcommand{\degree}{$^{\circ}$}
\newcommand{\degrees}[2]{#1\degree #2}
\newcommand{\setnewlength}[2]{\newlength{#1}\setlength{#1}{#2}}




%%%
%%% Page size and style
%%%


\setlength{\footheight}{0in}
\setlength{\oddsidemargin}{-0.25in} % ?? also evensidemargin ??
\setlength{\textwidth}{7.5in}
\setlength{\textheight}{10.0in}
\setlength{\topmargin}{-0.5in}


\setlength{\parindent}{0in}


\markright{Batch name:}


\raggedbottom


\renewcommand{\thepage}{}        % Prevent page numbers




%%%
%%% Various widths for lines, blanks, and so on
%%%


\setnewlength{\underblank}{-0.02in}
\setnewlength{\blankwidth}{0.25in}
\setnewlength{\thinline}{0.005in}
\setnewlength{\onecolumnwidth}{0.5\textwidth}
\addtolength{\onecolumnwidth}{-\columnsep}




%%%
%%% Command macros for the various sections and section entries.
%%%


\newcommand{\mysec}[1]{\section*{#1}}


\newcommand{\ledgerline}{\rule{\onecolumnwidth}{\thinline}\\}


\newcommand{\extract}[4]{#1 & #2 & #3 & #4 \\}
\newcommand{\extractentry}{\extract{}{}{$\Box$}{$\Box$} \hline}


\newcommand{\malt}[5]{#1 & #2 & #3 & #4 & #5 \\}
\newcommand{\maltentry}{\malt{}{}{}{}{} \hline} % color (#3) not used


\newcommand{\hop}[6]{#1 & #2 & #3 & #4 & #5 & #6 \\}
\newcommand{\hopentry}{\hop{}{}{}{$\Box$\rule[\underblank]{\blankwidth}{\thinline}}{$\Box$}{$\Box$} \hline}


\newcommand{\yeast}[6]{#1 & #2 & #3 & #4 & #5 & #6 \\}
\newcommand{\yeastentry}{\yeast{}{}{$\Box$}{$\Box$}{$\Box$}{$\Box$} \hline}


\newcommand{\adjunct}[4]{#1 & #2 & #3 & #4 \\}
\newcommand{\adjunctentry}{\adjunct{}{}{}{} \hline}


\newcommand{\procedure}[5]{#1 & #2 & #3 & #4 & #5 \\}
\newcommand{\procedureentry}[5]{\procedure{#1}{#2}{#3}{#4}{#5} \hline}


\newcommand{\record}[3]{#1 & #2 & #3 \\}
\newcommand{\recordentry}{\record{}{}{} \hline}


\newcommand{\blankentry}[1]{#1 \rule[\underblank]{\blankwidth}{\thinline}}




%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


\begin{document}




\mysec{Extracts and Kits}


\begin{tabular}{|l||l|c|c|}
\hline
\extract{Lb}{\makebox[2.0in][l]{Brand and Name}}{Hopped}{Dry}
\hline
\hline
\extractentry                        % 1
\extractentry                        % 2
\extractentry                        % 3
\extractentry                        % 4
\end{tabular}






\mysec{Malts, Grains and Adjuncts}
\begin{tabular}{|l||l|c|l|l|}
\hline
\malt{Lb [oz]}{\makebox[1.25in][l]{Variety}}{\degrees{}{L}}{Brand}{Country}
\hline
\hline
\maltentry                        % 1
\maltentry                        % 2
\maltentry                        % 3
\maltentry                        % 4
\maltentry                        % 5
\maltentry                        % 6
\maltentry                        % 7
\maltentry                        % 8
\maltentry                        % 9
\end{tabular}






\mysec{Hops}


\begin{tabular}{|l||l|l|ccc|}
\hline
\hop{AAU}{\makebox[1in][l]{Variety}}{Form}{Boil}{Steep}{Dry}
\hop{   }{                         }{    }{(min)}{    }{   }
\hline
\hline
\hopentry                        % 1
\hopentry                        % 2
\hopentry                        % 3
\hopentry                        % 4
\hopentry                        % 5
\hopentry                        % 6
\hopentry                        % 7
\hopentry                        % 8
\hopentry                        % 9
\end{tabular}






\mysec{Yeast}


\begin{tabular}{|l||l|cc|cc|}
\hline
\yeast{Amount}{Brand and style}{Ale}{Lager}{Dry}{Liquid}
\hline
\hline
\yeastentry
\yeastentry
\yeastentry
\end{tabular}






\mysec{Additives and Other Ingredients}


\begin{tabular}{|l||l|c|l|}
\hline
\adjunct{Amount}{Ingredient}{Boil}{Procedure Description}
\adjunct{      }{          }{(min)}{                    }
\hline
\adjunct{}{}{---}{Priming}
\hline
\adjunctentry
\adjunctentry
\adjunctentry
\adjunctentry
\adjunctentry
\end{tabular}






\mysec{Procedure}


\begin{tabular}{lll}
Mash water                & \blankentry{Temperature}        & \blankentry{Amount} \\
Mash-in                        & \blankentry{Temperature}        & \blankentry{pH} \\
Protein Rest                & \blankentry{Temperature}        & \blankentry{Time} \\
Acid Rest                & \blankentry{Temperature}        & \blankentry{Time} \\
Starch Conversion        & \blankentry{Temperature}        & \blankentry{Time} \\
Mash-out                & \blankentry{Temperature}        & \blankentry{Time} \\
Sparge Water                & \blankentry{Temperature}        & \blankentry{Amount} \\
Boil                        & \blankentry{Time} \\
Yeast Pitch                & \blankentry{Temperature}        & \blankentry{pH} \\
\end{tabular}






\mysec{Notes}


\ledgerline                        % underfull \hbox (badness 10000)
\ledgerline
\ledgerline
\ledgerline
\ledgerline
\ledgerline
\ledgerline
\ledgerline
\ledgerline
\ledgerline
\ledgerline
\ledgerline
\ledgerline
\ledgerline
\ledgerline
\ledgerline






\mysec{Record}


\begin{tabular}{|l|l|l|}
\hline
\record{Date}{SG}{\makebox[2.7in][l]{Action or Observation}}
\hline
\hline
\record{    }{  }{Original gravity} 
\hline
\recordentry
\recordentry
\recordentry
\recordentry
\recordentry
\recordentry
\recordentry
\recordentry
\recordentry
\recordentry
\recordentry
\recordentry
\recordentry
\recordentry
\recordentry
\recordentry
\recordentry
\recordentry
\end{tabular}


\end{document}




- ------------------------------


Date: Tue, 27 Feb 90 23:12:59 -0500
From: zentner`at`ee.ecn.purdue.edu (Mike Zentner)
Subject: First Time Mead Brewers




A question for the more experienced brewers...We are following the simple
recipe in one of the appendices of Papazian for ginger honey mead.  After
a week in the primary, we racked to the secondary, which merrily bubbled
away for about two weeks.  It now appears that most activity has stopped,
even after a thorough rousing.  The book says to let it age for 1-1.5
months in the secondary.  Does this mean that there should be visible signs
of fermentation until sometime after a month?  If the fermentation has
stopped, should we still let it rest in the secondary, or will this allow
the yeast to starve to the point where they will not be able to 
carbonate after bottling?  Any help is appreciated.




Another question.  What is the best way to sparge?  After reading
horror stories about shattered glass carboys due to heat shock, we've
been sparging into a plastic bucket first and cooling the wort
before transfering to the glass primary.  Well, we bought one of those
nylon hoops  an elastic band to strain out solids and tried
it in the latest batch "Hair of the Dog Wheat Beer" (so named 
because a few stray dog hairs crept into the boil) with little
success.  The bag quickly filled up and clogged (probably due to
the use of hop pellets), then broke loose and fell into the wort.
Any suggestions?




One last thing.  Does anybody else start their siphons like this?
We use a piece of tubing which has an OD that matches the ID of
the siphon hose.  Standing on a chair, you can use your mouth 
to suck the wort up a point just before the hose clamp in the
siphon, close it off, quickly pull off the mouthpiece hose, lower
the outlet of the siphon, and let it fly.  Contamination can only
be by the breath.  Usually the harder, white plastic hose available
in hardware stores slips in and out easier.


Mike & Lynn Zentner   zentner`at`cn.ecn.purdue.edu
                      zentnerl`at`ma.ecn.purdue.edu


- ------------------------------


Date: Wed, 28 Feb 90 09:10:06 PST
From: hsfmsh!hsfdjs!suurb`at`sfsun.West.Sun.COM (Dave Suurballe)
Subject: Sierra Nevada yeast culturing


Steve Harrison at Sierra Nevada tells me that they use one strain of
yeast for both fermenting and bottling.  They filter before bottling
to remove protein and dead yeast and then repitch for bottle conditioning.


My own opinion is that Bigfoot Ale is the worst choice of the Sierra
Nevada product line to get yeast from, that their weaker beers are
better choices.  Nevertheless, it's all the same yeast.


Suurb




- ------------------------------




End of HOMEBREW Digest #368, 03/01/90
*************************************
- -------




From gnu-misc-discuss-request`at`cis.ohio-state.edu Thu Mar  1 04:19:33 1990
Received: Thu, 1 Mar 90 04:19:30 est from tut.cis.ohio-state.edu (tut.cis.ohio-state.edu.ARPA) by asylum.gsfc.nasa.gov (4.12/1.5)
Received: by tut.cis.ohio-state.edu (5.61-kk/5.900222)
        id AA11956; Thu, 1 Mar 90 04:17:45 -0500
Errors-To: gnu-misc-discuss-request`at`cis.ohio-state.edu
Reply-To: gnu-misc-discuss`at`cis.ohio-state.edu
Sender: gnu-misc-discuss-request`at`cis.ohio-state.edu
Received: by tut.cis.ohio-state.edu (5.61-kk/5.900222)
        id AA11187; Thu, 1 Mar 90 04:09:17 -0500
Received: from USENET by tut.cis.ohio-state.edu with netnews
        for gnu-misc-discuss`at`tut.cis.ohio-state.edu (gnu-misc-discuss`at`tut.cis.ohio-state.edu)
        (contact usenet`at`tut.cis.ohio-state.edu if you have questions)
Date: 1 Mar 90 08:21:13 GMT
From: wuarchive!texbell!texsun!newstop!grapevine!bitbug`at`zaphod.mps.ohio-state.edu  (James Buster)
Organization: Sun Microsystems Federal, Inc.
Subject: Re: The purpose of info-gcc.
Message-Id: <BITBUG.90Mar1002113`at`lonewolf.sun.com>
References: <9002272346.AA01632`at`sugar-bombs.ai.mit.edu>, <708`at`qmfl.jrdc.go.jp>
To: gnu-misc-discuss`at`cis.ohio-state.edu


In article <2201`at`milton.acs.washington.edu> skyhawk`at`milton.acs.washington.edu (Scott Northrop) writes:
>In article <35328`at`grapevine.EBay.Sun.COM> bitbug`at`lonewolf.sun.com (James Buster) writes:
>>How about the creation of a new newsgroup, gnu.design.discuss?
>
>I fail to see why gnu.misc.discuss is not adequate for design
>discussions.  It's there, why not use it?


Because gnu.misc.discuss seems primarily for political discussions.
I want a newsgroup exclusively for software design issues. Politics
has its place, and it isn't there.
- --
- ---------------------------------------------------------------------
        James Buster                (Domain) bitbug`at`lonewolf.ebay.sun.com
  Mad Hacker Extraordinaire        (UUCP)   ...!sun.com!lonewolf!bitbug
- ---------------------------------------------------------------------


From hera!afd`at`bellcore.bellcore.com Thu Mar  1 08:48:20 1990
Received: Thu, 1 Mar 90 08:48:16 est from rutgers.edu (rutgers.rutgers.edu.ARPA) by asylum.gsfc.nasa.gov (4.12/1.5)
Received: from bellcore.UUCP by rutgers.edu (5.59/SMI4.0/RU1.3/3.05) with UUCP 
        id AA12222; Thu, 1 Mar 90 08:50:06 EST
Received: by bellcore.bellcore.com (5.61/1.34)
        id AA24685; Thu, 1 Mar 90 08:45:47 -0500
Message-Id: <9003011345.AA24685`at`bellcore.bellcore.com>
From: hera!afd`at`bellcore.bellcore.com (adietz)
To: chris`at`asylum.gsfc.nasa.gov
Date:  1 Mar 1990   8:41 EST
Subject: Homebrew Digest: Recipe log sheet


Please send the postscript version of your log sheet!


 -A Dietz
Bellcore, Morristown
bellcore!hera!afd
afd`at`hera.bellcore.com


From Mark.Leone`at`F.GP.CS.CMU.EDU Thu Mar  1 08:49:27 1990
Received: Thu, 1 Mar 90 08:49:25 est from F.GP.CS.CMU.EDU (f.gp.cs.cmu.edu.ARPA) by asylum.gsfc.nasa.gov (4.12/1.5)
Received: from f.gp.cs.cmu.edu by F.GP.CS.CMU.EDU id aa03958;
          1 Mar 90 8:50:47 EST
To: chris`at`asylum.GSFC.NASA.GOV
Subject: Brew sheet
Date: Thu, 01 Mar 90 08:50:40 EST
Message-Id: <3956.636299440`at`F.GP.CS.CMU.EDU>
From: Mark.Leone`at`F.GP.CS.CMU.EDU


Looks pretty useful!  Thanks...


- --
Mark R. Leone  <mleone`at`cs.cmu.edu>              "Don't just do something,
Computer Science, Carnegie Mellon University     sit there!"
Pittsburgh, PA 15213


From jaenicke`at`XN.LL.MIT.EDU Thu Mar  1 09:13:11 1990
Received: Thu, 1 Mar 90 09:13:07 est from XN.LL.MIT.EDU (81370101) by asylum.gsfc.nasa.gov (4.12/1.5)
Received:  by XN.LL.MIT.EDU; Thu, 1 Mar 90 09:54:55 EDT
Date: Thu, 1 Mar 90 09:54:55 EDT
From: jaenicke`at`XN.LL.MIT.EDU (Richard A. Jaenicke)
Posted-Date: Thu, 1 Mar 90 09:54:55 EDT
Message-Id: <9003011354.AA16761`at`XN.LL.MIT.EDU>
To: chris`at`asylum.gsfc.nasa.gov
Subject: Great LaTeX recipe log!


Chris,
   I thought I'd just take a moment to thank you for the LaTeX
brew recipe log sheet you sent in to the homebrew list.  It
really looks great.  I just starting brewing (first batch of
Brown Ale just turned out very good), and I was just berating
myself for not keeping a good record of the process.  Thanks to
you it will be easy in the future!


- --------
Richard A. Jaenicke                            MIT Lincoln Laboratory
InterNet: jaenicke`at`xn.ll.mit.edu            244 Wood Street
UUCP:     ...!ll-xn!jaenicke                Lexington, MA 02173


         


From `at`encore.encore.com:soper`at`maxzilla.encore.com Thu Mar  1 10:28:23 1990
Received: Thu, 1 Mar 90 10:27:36 est from encore.encore.com (815b010e) by asylum.gsfc.nasa.gov (4.12/1.5)
Received: from maxzilla.encore.COM by encore.encore.com with SMTP (5.61/25-eef)
        id AA27444; Thu, 1 Mar 90 10:28:40 -0500
Received: by maxzilla. (4.0/SMI-4.0)
        id AA09127; Thu, 1 Mar 90 10:31:44 EST
Date: Thu, 1 Mar 90 10:31:44 EST
From: Pete Soper <soper`at`maxzilla.encore.com>
Message-Id: <9003011531.AA09127`at`maxzilla.>
To: chris`at`asylum.gsfc.nasa.gov
Subject: Thanks


Thanks for the recipe sheet. It looks really nice. 
Here is the postscript for a date decoder. It works for
Sierra Nevada, Courage, Watneys, etc. It is designed to
be cut out and taped onto a business card. Cheers!
- --- snip ---
%!PS-Adobe-2.0 
%%Title: hbindex
%%Creator:  PageMaker 3.0  mof-pvk-jdn 
%%CreationDate:  2-28-1990, 17:16:4
%%For: 
%%BoundingBox:  0 0 612 792
%%Pages:  1 0
%%DocumentPrinterRequired:  (atend) 
%%DocumentFonts:  (atend) 
%%DocumentSuppliedFonts:  (atend) 
%%DocumentNeededProcSets: 
%%DocumentSuppliedProcSets: AldusDict2  209   25  
%%DocumentPaperSizes: Letter
%%EndComments 
%%BeginFile:  PatchFile
userdict /AldusDict known {(A previous version PageMaker header is loaded.) = flush} if
%%EndFile 
%%BeginProcSet: AldusDict2  209   25  
/AldusDict2 300 dict def        
AldusDict2
begin                                                                                                        
/AldusVersion                 209         def                
/AldusRev                        25                def                
systemdict /currentpacking known
{/AD_OldPacking currentpacking def
true setpacking
} if
/AD_PrevMatrix                 matrix         def                
/AD_SomethingOnPage        false        def                
/AD_OutlineWidth        30                def                
/AD_ShadOffset                0.06        def         
/AD_OLShadOffset        0.06        def         
/AD_OLSmearFact                0.03        def         
/AD_BoldSmearFact        0.03        def         
/AD_ObliqueAngle        -0.21        def         
/AD_TrueSetscreen /setscreen load def 
/AD_NestedMirror false def                
/BEGJOB                                                                                         
{        /AD_Invert                exch def
dup AD_NestedMirror xor /AD_NestedMirror exch def
/AD_MirrorFlag        exch def
/AD_WideFlag        exch def
/paperwid                exch def
/paperht                 exch def
/AD_Resolution        1440 def
/AD_PointsToUCS        AD_Resolution 72 div def
/AD_EvenRound 72 72 matrix defaultmatrix dtransform pop abs 750 gt def
AD_PrevMatrix currentmatrix pop
/AD_PrevScreen [currentscreen] def
/AD_PrevTransfer currenttransfer def
/AD_StdScreen true def
/STD_SCREEN
{
AD_StdScreen not
{
AD_PrevScreen cvx exec setscreen
/AD_PrevTransfer load settransfer
/AD_StdScreen true assign
}if
} def
true _SetCoordSys
version (23.) anchorsearch 
{
pop pop
/truesetgray /setgray load def
/setgray
{
mark
AD_Invert
{.0 .0 .06 .1 .28 .48 .56 .68 .82 .9 .98 1.0 }
{1.0 1.0 .98 .9 .82 .68 .56 .48 .28 .1 .06 .0 }
ifelse
counttomark dup 3 add -1 roll exch
2 sub mul dup floor cvi
dup 3 1 roll sub
exch dup 
3 add index exch 2 add index dup
4 1 roll
sub mul add
counttomark 1 add 1 roll 
cleartomark
truesetgray
} def
}
{ pop }
ifelse
/screenAdjust 1 0 dtransform exch atan def
/mirrorScreen AD_NestedMirror {/neg load} {{}} ifelse def
/setscreen {exch screenAdjust add mirrorScreen exch AD_TrueSetscreen} def
} def                        
/_SetCoordSys
{
/AD_OldSys exch def
AD_WideFlag
{        AD_OldSys
{
90 rotate 
1 AD_PointsToUCS div dup neg scale
}
{
1 AD_PointsToUCS div dup neg scale
paperht paperwid neg translate
90 rotate
}
ifelse
}
{ 1 AD_PointsToUCS div dup neg scale
0 paperht neg translate
} 
ifelse
AD_MirrorFlag
{ paperwid 0 translate
 -1 1 scale
} 
if
/AD_DeviceScale
1 1 transform pop 0 0 transform pop sub abs 
def
} bind def
/SETRES                                                                                         
{
/AD_Resolution        exch def
/AD_PointsToUCS        AD_Resolution 72 div def
AD_PrevMatrix setmatrix
false _SetCoordSys
} bind def                        
/BEGPAGE                                                                                         
{        /AD_SomethingOnPage        false def
}         bind def                        
/ENDPAGE                                                                                         
{        AD_SomethingOnPage 
{ save
showpage 
restore 
} if
}         def 
/ENDJOB                                                                                         
{        AD_PrevMatrix setmatrix
}         bind def                                                                                        
/S_IMAGEMASK                                                                                        
{        /here save def
/h exch def                /w exch def
/dh exch def        /dw exch def
/y0 exch def        /x0 exch def
/sx w dw div def
/sy h dh div def
/imbuf w 7 add 8 idiv string def
0 setgray
x0 y0 translate w h true [sx 0 0 sy 0 0]
{currentfile imbuf readhexstring pop} imagemask
here restore
/AD_SomethingOnPage        true def
}         bind def                                                                                        
/S_IMAGE                                                                                        
{        /here save def
/bits exch def
/h exch def                /w exch def
/dh exch def        /dw exch def
/y0 exch def        /x0 exch def
/sx w dw div def
/sy h dh div def
/imbuf w bits mul 7 add 8 idiv string def
x0 y0 translate w h bits [sx 0 0 sy 0 0]
{currentfile imbuf readhexstring pop} image
here restore
/AD_SomethingOnPage        true def
}         bind def                                                                                        
/S_PSCRIPT                                                                                        
{        /AD_SomethingOnPage        true def
}         bind def                                                                                        
/S_TEXTSEGBEG                                                                                        
{        /here save def
/TX_RunDrawn false def
newpath
}         bind def                                                                                        
/S_TEXTSEGEND                                                                                        
{        TX_RunDrawn
{ here restore
/AD_SomethingOnPage true def }
{ here restore } ifelse
}         bind def                                                                                        
/S_WORKING
{
/AD_WorkingMemory exch def
} bind def
/S_LOADFONT
{
AldusDict2 /AD_TopOfFonts known exch
{ { AD_TopOfFonts restore } if }
{ not { save /AD_TopOfFonts exch def } if        }
ifelse
} bind def
/SURSTR
{
AD_SomethingOnPage SUsv restore
} bind def
/SUSAVE
{
AldusDict2 /AD_TopOfFonts known 
vmstatus exch sub exch pop AD_WorkingMemory lt 
{ dup { AD_TopOfFonts restore } if } if
not                                        
{ save /AD_TopOfFonts exch def } if        
save /SUsv exch def /AD_SomethingOnPage exch def
} bind def
/_ftName 66 string def
/_AutoRecode
{        
/recode exch def
_ftName cvs
dup length 7 gt
{        dup 0 7 getinterval (|______) eq
{        dup length 7 exch 7 sub getinterval 
recode { FTRECODE } { FTRENAME } ifelse
}
{ pop }
ifelse
}
{ pop } ifelse
} bind def
/SHADOWFLAG                16#1  def                        
/OUTLINEFLAG        16#2  def                         
/BOLDSMEAR                16#4  def                         
/OUTLINESMEAR        16#8  def                         
/ReENCODED                16#10 def                        
/BOLDPSBUMP                16#20 def                        
/ITALICOBLIQUE        16#40 def                        
/SET                        
{        
/AD_textcolor        exch def        
/AD_fontbits        exch def        
/AD_20EMS                exch def        
1 index FontDirectory exch known not 
{ 1 index ReENCODED AD_fontbits _iand _AutoRecode } if 
BOLDPSBUMP AD_fontbits _iand
{        1 add } if
dup _ActivateFont
ITALICOBLIQUE AD_fontbits _iand
{         _ActivateObliqueFont 
} if
/AD_EmNotMatch AD_20EMS 20 div (M) _ADStringWidth pop sub abs 1 gt def
}         bind def                                                                                        
/S_SETUPRUN /SET load def                
/OUT                                
{        /here save def
/runwidth                exch def
/nspaces                exch def
/nchars                        exch def
/textrun                exch def
/letterspace        exch def        
/wordspace                exch def
/y1 exch def        /x1 exch def
nchars 0 gt
{        
AD_textcolor setgray 
/letterspace
AD_EmNotMatch
{        
runwidth                                        
textrun _ADStringWidth pop 
nchars dup 1 gt {1 sub} if
letterspace mul add                
nspaces wordspace mul add        
sub                                                
nchars dup 1 gt {1 sub} if
div                                                
}
{        
0 } ifelse                                         
letterspace add def                                
SHADOWFLAG AD_fontbits _iand
{        save
OUTLINEFLAG AD_fontbits _iand
{        _OLShadowOffset
}
{        _ShadowScreen
AD_textcolor _ShadowColor
_ShadowOffset
} ifelse 
OUTLINEFLAG AD_fontbits _iand
OUTLINESMEAR AD_fontbits _iand not and 
{        _ActivateSolidFont
} if 
_ShowRun
BOLDSMEAR AD_fontbits _iand
{        _BoldSmearOffset _ShowRun
} if 
restore
} if 
OUTLINEFLAG AD_fontbits _iand 
OUTLINESMEAR AD_fontbits _iand and
{        _OLSmearRun
}
{        OUTLINEFLAG AD_fontbits _iand
{        save
_ActivateSolidFont 
1 AD_textcolor sub setgray
_ShowRun
restore
} if 
_ShowRun
BOLDSMEAR AD_fontbits _iand
{        _BoldSmearOffset _ShowRun
} if 
} ifelse 
} if 
here restore
/AD_SomethingOnPage true def
}         bind def                                                                                        
/S_OUTPUTRUN /OUT load def                
/_ADStringWidth                                                                                
{
gsave closepath clip stringwidth grestore        
}         bind def
/_OLSmearRun                                                                                
{        
gsave _OLSmearOffset translate _ShowRun grestore                        
gsave _OLSmearOffset exch neg exch translate _ShowRun grestore                        
gsave _OLSmearOffset exch translate _ShowRun grestore                                                                                 
gsave _OLSmearOffset exch neg translate _ShowRun grestore                        
gsave 1.0 AD_textcolor sub setgray _ShowRun grestore
}         bind def
/_ShowRun                                                                                
{        
x1 y1 moveto 
wordspace 0 8#040 letterspace 0 textrun awidthshow
}         bind def
/S_UNDERLINE                                                                                
{        /here save def
/color                        exch def
/pointsize                exch def
/width                        exch def
/deltay                        exch def
/baseline                exch def
/rightx                        exch def
/leftx                        exch def
currentfont /FontInfo known
{        
currentfont /FontInfo get
/UnderlinePosition known
{        /deltay 
currentfont /FontInfo get 
/UnderlinePosition get 
currentfont /FontMatrix get 3 get mul 
pointsize AD_fontscale AD_PointsToUCS 
div div mul def
} if 
currentfont /FontInfo get
/UnderlineThickness known
{        /width
currentfont /FontInfo get
/UnderlineThickness get 
currentfont /FontMatrix get 3 get abs mul 
pointsize AD_fontscale AD_PointsToUCS 
div div mul def
} if 
} if 
/underliney 
0 baseline deltay add transform 
round exch round exch itransform exch pop def
color setgray 
width setlinewidth
SHADOWFLAG AD_fontbits _iand
{        save
OUTLINEFLAG AD_fontbits _iand 
{        _OLShadowOffset
}
{        _ShadowScreen
color _ShadowColor
_ShadowOffset
} ifelse 
leftx underliney rightx underliney _ShowUnderline                                                                 
restore
} if 
leftx underliney rightx underliney _ShowUnderline
OUTLINEFLAG AD_fontbits _iand
OUTLINESMEAR AD_fontbits _iand not and 
{        
save
1 color sub setgray
/AD_OutlineWidth
AD_OutlineWidth 1000 div AD_fontscale mul def
width 3 AD_OutlineWidth mul ge
{ width 2 AD_OutlineWidth mul sub }
{ width 3 div } ifelse
setlinewidth
leftx AD_OutlineWidth add underliney
rightx AD_OutlineWidth sub underliney _ShowUnderline
restore
} if 
here restore
/AD_SomethingOnPage true def
}         bind def
/_ShowUnderline                                                                                
{
newpath moveto lineto stroke        
}         bind def
/S_STRIKETHRU                                                                                        
{        /here save def
/color                        exch def
/y                                exch def
/rightx                        exch def
/leftx                        exch def
/y        0 y transform 
round exch round exch itransform exch pop def
color setgray 
_StrikeThruWidth setlinewidth
newpath
leftx  y moveto
rightx y lineto stroke
here restore
/AD_SomethingOnPage true def
}         bind def                                                                                        
/DV_DRAW_TEXT                                                                                        
{        /here save def
/text        exch def
/y                 exch def        
/x                 exch def
Black setgray
(Helvetica-Bold) FTRECODE
/|______Helvetica-Bold 9 dup _ActivateFont 
x y moveto
text show                                        
here restore
/AD_SomethingOnPage        true def
}         bind def                                                                                        
/DV_DRAW_BOX                                                                                        
{        /here save def
/draftflag exch def
/shadowflag exch def
/y2 exch def        /x2 exch def
/y1 exch def        /x1 exch def
AD_PointsToUCS 2 div setlinewidth
newpath
x1 y1 moveto
x1 y2 lineto
x2 y2 lineto
x2 y1 lineto closepath 
shadowflag
{ gsave STD_SCREEN 0.5 setgray fill grestore}
{ gsave
1.0 setgray fill
grestore 
0.0 setgray stroke } ifelse
draftflag
{ x1 y1 moveto
x2 y2 lineto stroke
x2 y1 moveto
x1 y2 lineto stroke } if
here restore
/AD_SomethingOnPage        true def
}         bind def
/DV_DRAW_LINE                                                                                        
{        /here save def
/lw exch def
/y2 exch def        /x2 exch def
/y1 exch def        /x1 exch def
x1 y1 transform 
round exch round exch itransform /y1 exch def /x1 exch def
x2 y2 transform 
round exch round exch itransform /y2 exch def /x2 exch def
0 lw transform 
round exch round exch itransform /lw exch def pop
lw setlinewidth
Black setgray
newpath
x1 y1 moveto
x2 y2 lineto stroke
here restore
/AD_SomethingOnPage        true def
}         bind def
/DV_DRAW_CIRCLE                                                                                        
{        /here save def
/lw exch def
/r        exch def
/y        exch def                /x exch def
x y transform 
round exch round exch itransform /y exch def /x exch def
0 r transform 
round exch round exch itransform /r exch def pop
0 lw transform 
round exch round exch itransform /lw exch def pop
lw setlinewidth
Black setgray
newpath
x y r 0 360 arc stroke
here restore
/AD_SomethingOnPage        true def
}         bind def                                                                                        
/_ActivateFont                                                                                
{        
/AD_fontscale         exch AD_PointsToUCS mul def
/AD_fontscaleX        exch AD_PointsToUCS mul def
/AD_fontname         exch def
AD_fontname findfont
[ AD_fontscaleX 0 0 AD_fontscale neg 0 0 ] makefont
setfont        
}         bind def
/_ActivateObliqueFont                                                                                
{        
AD_fontname findfont
[ AD_fontscaleX 0 0 AD_fontscale neg 0 0 ] 
[ 1 0 
AD_ObliqueAngle 
1 0 0 ] matrix concatmatrix makefont setfont        
}         bind def
/_ActivateSolidFont                                                                                
{        
AD_solidfont 
AD_fontscaleX AD_PointsToUCS div 
AD_fontscale AD_PointsToUCS div _ActivateFont
}         bind def
/_ShadowOffset                                                                                
{        
AD_ShadOffset AD_fontscaleX mul AD_ShadOffset AD_fontscale mul translate        
}         bind def
/_OLShadowOffset                                                                                
{        
AD_OLShadOffset AD_fontscaleX mul AD_OLShadOffset AD_fontscale mul translate        
}         bind def
/_ShadowScreen                                                                                
{        
100 AD_PrevScreen 1 get AD_PrevScreen 2 get setscreen
}         bind def        
/_ShadowColor                                                                                
{        
0.6 mul 0.8 exch sub setgray
}         bind def
/_OLSmearOffset                                                                                
{        
AD_OLSmearFact AD_fontscaleX mul AD_OLSmearFact AD_fontscale mul
}         bind def
/_BoldSmearOffset                                                                                
{        
AD_BoldSmearFact AD_fontscaleX mul AD_BoldSmearFact AD_fontscale mul translate
}         bind def
/_StrikeThruWidth                                                                                
{        
AD_fontscale 16 div
}         bind def
/_iand                                                                                
{        and 0 ne           
}         bind def
/bdef { bind def } bind def
/FTRENAME {
dup (|______) exch ftMakeName cvn /NewName local
FontDirectory NewName known
{pop}
{cvn findfont dup
maxlength dict false copyDict
dup /FontName known
{dup /FontName NewName put} if
NewName exch definefont pop
} ifelse
} bdef
/FTRECODE {
dup (|______) exch ftMakeName cvn /NewName local
FontDirectory NewName known
{pop}
{cvn findfont dup
maxlength dict false copyDict
dup /FontName known
{dup /FontName NewName put} if
dup /Encoding MacEncoding put
NewName exch definefont pop
} ifelse
} bdef
/FTOUTLINE {
ReENCODED FTOLINE
} bdef
/FTOLINE {
/AD_fontbits exch def
cvn /OlineName local
dup /AD_solidfont exch def
AD_solidfont FontDirectory exch known not 
{ AD_solidfont ReENCODED AD_fontbits _iand _AutoRecode } if 
FontDirectory OlineName known
{pop}
{cvn findfont dup
maxlength 2 add dict true copyDict
dup /FontName known
{dup /FontName OlineName put} if
dup /PaintType 2 put
dup /StrokeWidth AD_OutlineWidth put
OlineName exch definefont pop
} ifelse
} bdef
/AD_nameString1 66 string def                        
/ftMakeName {
1 index length /PrefixLen local
dup length PrefixLen add AD_nameString1 exch 0 exch getinterval
dup PrefixLen 4 -1 roll putinterval
dup 0 4 -1 roll putinterval
} bdef
/copyDict {
/NoUnique local
/NewFont local
{exch dup /FID ne
NoUnique
{1 index /UniqueID ne and} if
{exch NewFont 3 1 roll put}
{pop pop}  ifelse
} forall
NewFont
} bdef
/MacEncoding 256 array def
MacEncoding 0
/Times-Roman findfont /Encoding get
0 128 getinterval
putinterval
MacEncoding 16#27 /quotesingle put
MacEncoding 16#60 /grave put
/Adieresis /Aring /Ccedilla /Eacute /Ntilde /Odieresis /Udieresis /aacute
/agrave /acircumflex /adieresis /atilde /aring /ccedilla /eacute /egrave
/ecircumflex /edieresis /iacute /igrave /icircumflex /idieresis /ntilde /oacute
/ograve /ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex /udieresis
/dagger /degree /cent /sterling /section /bullet /paragraph /germandbls
/registersans /copyrightsans /trademarksans /acute /dieresis /notequal /AE /Oslash
/infinity /plusminus /lessequal /greaterequal /yen /mu /partialdiff /summation
/product /pi /integral /ordfeminine /ordmasculine /Omega /ae /oslash
/questiondown /exclamdown /logicalnot /radical /florin /approxequal /Delta /guillemotleft
/guillemotright /ellipsis /space /Agrave /Atilde /Otilde /OE /oe
/endash /emdash /quotedblleft /quotedblright /quoteleft /quoteright /divide /lozenge
/ydieresis /Ydieresis /fraction /currency /guilsinglleft /guilsinglright /fi /fl
/daggerdbl /periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute
/Edieresis /Egrave /Iacute /Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex
/apple /Ograve /Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde
/macron /breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
MacEncoding 128 128 getinterval astore pop
/getAnInt{2 getinterval dup 0 get 16#100 mul exch 1 get add cvi}def
/CharBitStr 30 string def
/BuildCharDict 16 dict def
/AFONT
{
gsave
/FName local
/BMFSize local
1 add /LastChar local
/FirstChar local
/DefChar LastChar FirstChar sub 2 mul def
20 dict dup 
begin 
10 1 roll
/LocTableLen local
/OWTableLen local
/BMRowLen local
/PixelHeight local
/FontWidth local
/MaxWidth local
/MaxKern local
/Descent local
/Ascent local
/Bits BMRowLen PixelHeight mul string currentfile exch readhexstring pop def
/LocTable LocTableLen string currentfile exch readhexstring pop def
/OWTable OWTableLen string currentfile exch readhexstring pop def
/FontType 3 def
/FontMatrix matrix def
/FontBBox[MaxKern Descent neg MaxWidth MaxKern add Ascent]def
/Encoding 256 array def
Encoding 0 MacEncoding 0 256 getinterval putinterval
/Mummble 257 array def
0 1 256{Mummble exch DefChar put}for
FirstChar 1 LastChar{Mummble exch dup FirstChar sub 2 mul put}for
/BuildChar
{
BuildCharDict 
begin
/1Char local
/FDict local
FDict /Mummble get 1Char get /2Char local
FDict /OWTable get 2Char getAnInt 16#FFFF eq
{/2Char DefChar assign}if
FDict /LocTable get 2Char getAnInt
/BitLoc local
FDict /LocTable get 2Char 2 add getAnInt
BitLoc sub
/BitWidth local
BitLoc 8 mod /ShiftVal local
16#FF 8 ShiftVal sub
dup neg /RemShift local
bitshift 16#FF and /BMask local
16#FF 8 BitLoc BitWidth add 8 mod
sub dup 8 ge{pop 0}if
BitWidth 0 eq{pop 8}if
bitshift /AMask local
BitWidth ShiftVal add 7 add 8 idiv
dup 0 eq{pop 1}if
/ByteWidth local
BitLoc 8 idiv
/WhichRow local
FDict /OWTable get 2Char get cvi /Offset local
FDict /OWTable get 2Char 1 add get cvi /Charwidth local
Charwidth 0 BMFSize divPoint
FDict /MaxKern get FDict /Descent get neg BMFSize divPoint
BitWidth Offset add FDict /MaxKern get add FDict /Ascent get BMFSize divPoint
setcachedevice
gsave
ByteWidth 8 mul
FDict /PixelHeight get
true
[FDict /PixelHeight get FDict /Descent get sub 1 add
0
0
FDict /PixelHeight get FDict /Descent get sub 1 add neg
Offset neg 0.5 add
FDict /PixelHeight get FDict /Descent get sub 0.5 add]
{ 
FDict /Bits get WhichRow
ByteWidth getinterval
CharBitStr copy /ThisRow local
16#100
ByteWidth 1 sub 1 neg 0
{        /iV local
ThisRow iV get
1 index 16#100 eq{AMask and}if
dup BMask and RemShift bitshift
3 1 roll ShiftVal bitshift
add 16#FF and
cvi ThisRow iV 3 -1 roll put
}for
pop ThisRow
/WhichRow WhichRow FDict /BMRowLen get add assign
} imagemask
grestore
end 
}def 
end
FontDirectory FName cvn known
{pop}
{FName cvn exch definefont pop} ifelse
grestore
}def 
/const /def load def
/var /def load def
/local[/exch load /def load]cvx def
/assign /def load def
/incr{dup cvx exec 1 add assign}bdef
/postIncr{dup cvx exec exch incr}bdef
/SpaceChar 16#20 const
/cvPA{2 array astore cvx}bdef
/point{cvPA def}bdef
/locPoint{3 1 roll point}bdef
/pointXpoint{3 -1 roll mul 3 1 roll mul exch}bdef
/pointDpoint{3 -1 roll exch div 3 1 roll div exch}bdef
/setPoint{load astore pop}bdef
/dupPoint{2 copy}bdef
/addPoint{exch 4 -1 roll add 3 1 roll add}bdef
/subPoint{exch 3 1 roll sub 3 1 roll sub exch}bdef
/mulPoint{dup pointXpoint}bdef
/divPoint{dup pointDpoint}bdef
/exchPoint{4 2 roll}bdef
/overPoint{3 index 3 index}bdef
/anyStatD systemdict /statusdict known const
/thisProduct anyStatD
{statusdict /product known{statusdict /product get}{()}ifelse}
{()}ifelse const
/PerCentChg 1.0 -1.0 point
/boxPath{/y2 local /x2 local /y1 local /x1 local
x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto
closepath}bdef
/dump{4{pop}repeat}bdef
/rBoxPath{/r local /y2 local /x2 local
/y1 local /x1 local
x1 r add y1 moveto x2 y1 x2 y2 r arcto dump
x2 y2 x1 y2 r arcto dump x1 y2 x1 y1 r arcto dump
x1 y1 x2 y1 r arcto dump closepath}bdef
/SaveMatrix matrix var
/ButtCap   0 const
/SquareCap 2 const
/MiterJoin 0 const
/BevelJoin 2 const
/Black 0 const
/White 1 const
/Wide  0 const
/Narrow 1 const
/PictPostScript false var
/isHairline false var
/PBEGIN{
dup not {save /PSave exch def} if
/isLBO exch def
/PBotRight locPoint
/PTopLeft locPoint
isLBO not {newpath PTopLeft PBotRight boxPath clip} if newpath
isLBO {ButtCap}{SquareCap} ifelse setlinecap
MiterJoin setlinejoin
3 setmiterlimit
AD_PointsToUCS setlinewidth
/deviceRound
{
dup
AD_DeviceScale mul round AD_DeviceScale div
dup 0 eq { pop } { exch pop } ifelse 
} def
/HairWidth 
AD_PointsToUCS 4 div 
AD_DeviceScale mul deviceRound dup 1.5 lt
{ pop 0 } if
const
Black setgray
/LineScale 1 var
/LineWidth  AD_PointsToUCS var
/LineHeight AD_PointsToUCS var
/DoingWedge false var
/DoingArc   false var
AldusDict2 /PatternShade known not
{
/psb {} bdef                                
/pse {} bdef
/PatternShade Black var
/DeclaredPattern <00> var
/PCurPat         <01> var 
} if
}bdef
/PEND{
newpath
isLBO not {PSave restore} if
/AD_SomethingOnPage        true def
}bdef
/SetPattern {
dup /PatternShade exch def setgray
} bdef
/bitison{
/ybit local /xbit local
PCurPat ybit PatWidth mul
xbit 8 idiv add get
1 7 xbit 8 mod AD_NestedMirror {exch pop}{sub} ifelse bitshift
and 0 ne}bdef
/PSHADE{
STD_SCREEN
100 div dup /PatternShade exch def setgray
<01> /PCurPat local 
} def
/BK { Black setgray } bdef                        
/WT { White setgray } bdef                        
/PBLACK /BK load def                                        
/PWHITE /WT load def                                        
/PUSETHISPATTERN {
dup PCurPat eq {pop}{ PPATTERN } ifelse
PatternShade setgray
/VerifyUsedPattern false def
} bdef
/PUSEPATTERN {
VerifyUsedPattern
{DeclaredPattern PCurPat ne {DeclaredPattern PPATTERN} if
} if
PatternShade setgray
/VerifyUsedPattern false def
} bdef
/PDECLAREPATTERN {
/DeclaredPattern exch def
/VerifyUsedPattern true def
} bdef
/PatWidth 1 const
/PatSide 8 const
/PFreq 300 32 div const
/PPATTERN{/PCurPat local
/VerifyUsedPattern false def
0 /Onbits local 0 /Offbits local
AD_Invert {{1 exch sub} settransfer} {{} settransfer} ifelse 
PFreq PerCentChg pop dup 0.96 eq
{pop}{div}ifelse 
0 
{
1 1 addPoint 2 divPoint PatSide mulPoint
cvi exch cvi exch bitison AD_Invert xor
{/Onbits incr 1}
{/Offbits incr 0}ifelse
}
setscreen
Offbits dup Onbits add div AD_Invert {1 exch sub} if SetPattern
/AD_StdScreen false assign}def
/vertLines{pop dup mul -2 mul 1 add}bdef
/sPat
{                        
AD_Invert {{1 exch sub} settransfer} {{} settransfer} ifelse 
setscreen setgray
}def
/PALDUSSHADE
{
<11> /PCurPat local
/AD_StdScreen false assign
Wide eq
{ 0.774 20 45 {vertLines} sPat }
{ 0.643 30 45 {vertLines} sPat }
ifelse
} bdef
/PHAIRWIDTH
{
HairWidth setlinewidth /isHairline true def
} bdef
/LW {                                
LineScale mul deviceRound /LineHeight exch def
LineScale mul deviceRound dup /LineWidth exch def
setlinewidth
/isHairline false def
}bdef
/PLNWIDTH /LW load def                
/PLNSCALE{div /LineScale exch def} bdef
/roundCoord
{
0.5 add round 0.5 sub
} bdef
/roundPoint
{
transform
AD_EvenRound
{ 2 div round 2 mul exch 2 div round 2 mul exch }
{ round exch round exch }
ifelse
itransform
} bdef
/adjWidth {
currentlinewidth dup
1 AD_DeviceScale div gt { deviceRound 2 div } { pop .5 AD_DeviceScale div } ifelse
} bdef
/pULAdj{ roundPoint adjWidth dup addPoint }bdef
/pLRAdj{ roundPoint adjWidth dup subPoint }bdef
/PLINETO
{
PictPostScript 
{ moveto lineto }
{ 
/y2 exch def /x2 exch def /y1 exch def /x1 exch def
currentlinecap ButtCap setlinecap
newpath
x1 x2 eq y1 y2 eq and
{
LineWidth 1 le LineHeight 1 le and
{ x1 y1 moveto } 
{ x1 y1 
x1 LineWidth add y1 LineHeight add
boxPath fill}
ifelse
}
{ y1 y2 eq                         
{ 
LineWidth x1 x2 lt 
{ x2 add /x2 exch def }
{ x1 add /x1 exch def }
ifelse
LineHeight setlinewidth 
x1 y1 LineHeight 2 div add roundPoint moveto
x2 y2 LineHeight 2 div add roundPoint lineto
mayStroke
}
{ x1 x2 eq                         
{ 
LineHeight y1 y2 lt 
{ y2 add /y2 exch def }
{ y1 add /y1 exch def }
ifelse
x1 LineWidth 2 div add y1 roundPoint moveto
x2 LineWidth 2 div add y2 roundPoint lineto
mayStroke
}
{                                
x1 y1 pULAdj moveto x2 y2 pULAdj lineto mayStroke
}
ifelse 
}        
ifelse
}
ifelse
setlinecap                        
}
ifelse
}bdef
/HairRect
{
save /here exch def
/y2 exch def /x2 exch def 
/y1 exch def /x1 exch def
PHAIRWIDTH newpath
x1 x2 sub abs y1 y2 sub abs lt
{ x1 x2 add 2 div dup y1 roundPoint moveto y2 roundPoint lineto stroke}
{ y1 y2 add 2 div dup x1 exch roundPoint moveto x2 exch roundPoint lineto stroke}
ifelse
here restore
} bdef 
/PHAIRLINE
{
count 4 gt
{ 
newpath PHAIRWIDTH
addPoint 2 divPoint roundPoint moveto 
addPoint 2 divPoint roundPoint lineto pop pop
stroke
}
{ HairRect }
ifelse
} bdef
/PHANGLINE
{
roundPoint /yb exch def /xr exch def 
roundPoint /yt exch def /xl exch def 
deviceRound /delta exch def 
{ {yt delta sub /yt exch def} {yb delta add /yb exch def} ifelse } 
{ {xl delta sub /xl exch def} {xr delta add /xr exch def} ifelse } 
ifelse
newpath 
1 AD_DeviceScale div 2 div dup dupPoint 
xl yt addPoint exchPoint
xr yb exchPoint subPoint boxPath fill
} bdef
/PRECT{newpath pLRAdj exchPoint pULAdj exchPoint boxPath}bdef
/PRRECT { pLRAdj /Botts locPoint pULAdj /Tops locPoint 
currentlinewidth dup subPoint /Diams locPoint 
newpath SaveMatrix currentmatrix pop
Botts Tops subPoint /Sides locPoint
Sides pop abs Diams pop ge{Diams}{Sides}ifelse pop
Sides exch pop abs Diams exch pop ge{Diams}{Sides}ifelse exch pop 
/Diams locPoint
Diams 2 div /YRad local
0 gt{Diams 
div}{1}ifelse 1 /PRRscale locPoint
Tops translate PRRscale scale 0 0 Sides PRRscale pointDpoint
Diams 0 gt exch 0 gt and{YRad rBoxPath}{boxPath}ifelse
SaveMatrix setmatrix}bdef
/POVAL{newpath SaveMatrix currentmatrix pop
0 359 false pArc closepath
SaveMatrix setmatrix}bdef
/PARC{ newpath SaveMatrix currentmatrix pop
/DoingArc true assign
false pArc        
SaveMatrix setmatrix }bdef
/PWEDGE{newpath SaveMatrix currentmatrix pop
/DoingWedge true assign
true pArc closepath
SaveMatrix setmatrix }bdef
/modAdj{
dup 360 gt{360 sub}if
dup 0 lt{360 add}if}bdef
/pArc{/Fill local
/ArcAng local /BegAng local
pLRAdj /PLR locPoint
pULAdj /PUL locPoint
360 BegAng ArcAng add sub 90 add modAdj /StartAng local
StartAng ArcAng add /EndAng local
PLR PUL subPoint 2 divPoint /Rad locPoint
PUL Rad addPoint translate
Rad neg scale
Fill{0 0 moveto}if
0 0 1 StartAng EndAng
dupPoint eq
{pop pop 0 359 arc closepath}
{ArcAng 0 lt
{arcn}{arc}ifelse
}
ifelse
}bdef
/PBEGPOLY{
newpath pULAdj moveto
}bdef
/PPOLYPOINT {
pULAdj lineto
} bdef 
/PENDPOLY{
/Closed local
Closed{closepath}if
}bdef
/PBEGRGN{mark}bdef
/PREGION{PRECT cleartomark}bdef
/PTXBEG {/PTSave1 save const} bdef
/PROTATE {
currentdict /PRotateSave known not
{save /PRotateSave exch def} if
3 1 roll dupPoint neg exch neg exch 5 2 roll 
translate rotate translate
} bdef
/PHFLIP {
currentdict /PRotateSave known not
{save /PRotateSave exch def} if
dupPoint neg exch neg exch 4 2 roll 
translate -1  1 scale translate
} bdef
/PVFLIP {
currentdict /PRotateSave known not
{save /PRotateSave exch def} if
dupPoint neg exch neg exch 4 2 roll 
translate  1 -1 scale translate 
} bdef
/PROTATE_END
{
PRotateSave restore
} bdef
/PSCALETEXT {
AD_PointsToUCS mul div /Xscale exch def 
AD_PointsToUCS mul div /Yscale exch def
currentfont [ Xscale 0 0 Yscale 0 0 ] makefont setfont
/AD_fontscaleX AD_fontscaleX Xscale mul def
/AD_fontscale AD_fontscale Yscale mul def
} bdef
/PSTBEG {
userdict /md known not 
{ userdict begin /md 0 def end } if
PBLACK /PictPostScript true def
} bdef
/PSTEND {
/PictPostScript false def
} bdef
/mayStroke{                                
currentlinewidth 0 gt isHairline or
{
gsave
DoingWedge  {MiterJoin setlinejoin} if 
currentlinewidth  1 AD_DeviceScale div sub setlinewidth 
stroke 
grestore
} if
/DoingWedge false assign
} bdef
/PFRAME{mayStroke}bdef
/PPAINT{mayStroke eofill}bdef
/PERASE{mayStroke eofill}bdef
/PFILL {mayStroke gsave eofill grestore}bdef
systemdict /currentpacking known
{AD_OldPacking setpacking} if
/AldusDone AldusVersion def                        
end                                                                                                                
%%EndProcSet 
%%EndProlog 
AldusDict2  begin
%%BeginSetup 
letter
 mark 
{
mark
1.0 1.0 .98 .9 .82 .68 .56 .48 .28 .1 .06 .0
counttomark dup 3 add -1 roll exch
2 sub mul dup floor cvi
dup 3 1 roll sub
exch dup 
3 add index exch 2 add index dup
4 1 roll
sub mul add
counttomark 1 add 1 roll 
cleartomark
} bind
%%Feature: NormalizedTransfer
 settransfer erasepage cleartomark
/#copies 1 def
 (; document: hbindex)
 statusdict /jobname 3 -1 roll put 
 statusdict /waittimeout 300 put 
2550 3300 true false false BEGJOB
300 SETRES
25000 S_WORKING
save /SUsv exch def
%%EndSetup 
%%Page: 7 1
BEGPAGE
 225.0 506.0 900.0 1538.0 false PBEGIN


 <F87422478F172271> PDECLAREPATTERN


 0.0 0.0 LW <F87422478F172271> PUSETHISPATTERN


 225.0 506.0 895.0 1534.0 PRECT PPAINT


 0.0 0.0 LW BK 225.0 506.0 895.0 1534.0 PRECT PFRAME


 0.0 0.0 LW WT 225.0 570.0 830.0 1467.0 PRECT PPAINT


 0.0 0.0 LW BK 225.0 570.0 830.0 1467.0 PRECT PFRAME


 PEND


SURSTR
false S_LOADFONT
(Courier) FTRECODE
SUSAVE
/|______Courier 28 124 mul 497 div 660 16 0 SET
 225.0 506.0 900.0 1538.0 false PBEGIN


 <F87422478F172271> PDECLAREPATTERN


 S_TEXTSEGBEG
 833.0 200.0 964.0 200.0 PSCALETEXT 369 973 0.0000 0.0000
(8) 1 0 19 OUT
 S_TEXTSEGEND
 0.0 0.0 LW BK 225.0 813.0 PBEGPOLY


 249.0 809.0 PPOLYPOINT 249.0 813.0 PPOLYPOINT 249.0 817.0 PPOLYPOINT 225.0 813.0 PPOLYPOINT true PENDPOLY PPAINT


 2.0 2.0 LW BK 249.0 813.0 376.0 813.0 PLINETO


 0.0 0.0 LW BK 225.0 739.0 PBEGPOLY


 249.0 734.0 PPOLYPOINT 249.0 739.0 PPOLYPOINT 249.0 743.0 PPOLYPOINT 225.0 739.0 PPOLYPOINT true PENDPOLY PPAINT


 2.0 2.0 LW BK 249.0 739.0 290.0 739.0 PLINETO


 0.0 0.0 LW BK 225.0 757.0 PBEGPOLY


 249.0 753.0 PPOLYPOINT 249.0 757.0 PPOLYPOINT 249.0 761.0 PPOLYPOINT 225.0 757.0 PPOLYPOINT true PENDPOLY PPAINT


 2.0 2.0 LW BK 249.0 757.0 311.0 757.0 PLINETO


 0.0 0.0 LW BK 225.0 776.0 PBEGPOLY


 249.0 772.0 PPOLYPOINT 249.0 776.0 PPOLYPOINT 249.0 780.0 PPOLYPOINT 225.0 776.0 PPOLYPOINT true PENDPOLY PPAINT


 2.0 2.0 LW BK 249.0 776.0 333.0 776.0 PLINETO


 0.0 0.0 LW BK 225.0 795.0 PBEGPOLY


 249.0 790.0 PPOLYPOINT 249.0 795.0 PPOLYPOINT 249.0 799.0 PPOLYPOINT 225.0 795.0 PPOLYPOINT true PENDPOLY PPAINT


 2.0 2.0 LW BK 249.0 795.0 355.0 795.0 PLINETO


 PEND


SURSTR
SUSAVE
/|______Courier 28 124 mul 497 div 660 16 0 SET
 225.0 506.0 900.0 1538.0 false PBEGIN


 <F87422478F172271> PDECLAREPATTERN


 S_TEXTSEGBEG
 833.0 200.0 964.0 200.0 PSCALETEXT 304 749 0.0000 0.0000
(1) 1 0 19 OUT
 S_TEXTSEGEND
 PEND


SURSTR
SUSAVE
/|______Courier 28 124 mul 497 div 660 16 0 SET
 225.0 506.0 900.0 1538.0 false PBEGIN


 <F87422478F172271> PDECLAREPATTERN


 S_TEXTSEGBEG
 833.0 200.0 964.0 200.0 PSCALETEXT 326 768 0.0000 0.0000
(2) 1 0 19 OUT
 S_TEXTSEGEND
 PEND


SURSTR
SUSAVE
/|______Courier 28 124 mul 497 div 660 16 0 SET
 225.0 506.0 900.0 1538.0 false PBEGIN


 <F87422478F172271> PDECLAREPATTERN


 S_TEXTSEGBEG
 833.0 200.0 964.0 200.0 PSCALETEXT 348 786 0.0000 0.0000
(4) 1 0 19 OUT
 S_TEXTSEGEND
 PEND


SURSTR
SUSAVE
/|______Courier 28 124 mul 497 div 660 16 0 SET
 225.0 506.0 900.0 1538.0 false PBEGIN


 <F87422478F172271> PDECLAREPATTERN


 S_TEXTSEGBEG
 833.0 200.0 964.0 200.0 PSCALETEXT 369 805 0.0000 0.0000
(8) 1 0 19 OUT
 S_TEXTSEGEND
 PEND


SURSTR
SUSAVE
/|______Courier 28 124 mul 497 div 660 16 0 SET
 225.0 506.0 900.0 1538.0 false PBEGIN


 <F87422478F172271> PDECLAREPATTERN


 S_TEXTSEGBEG
 833.0 200.0 964.0 200.0 PSCALETEXT 391 824 0.0000 0.0000
(16) 2 0 38 OUT
 S_TEXTSEGEND
 0.0 0.0 LW BK 225.0 832.0 PBEGPOLY


 249.0 828.0 PPOLYPOINT 249.0 832.0 PPOLYPOINT 249.0 836.0 PPOLYPOINT 225.0 832.0 PPOLYPOINT true PENDPOLY PPAINT


 2.0 2.0 LW BK 249.0 832.0 290.0 832.0 PLINETO


 0.0 0.0 LW BK 225.0 851.0 PBEGPOLY


 249.0 847.0 PPOLYPOINT 249.0 851.0 PPOLYPOINT 249.0 855.0 PPOLYPOINT 225.0 851.0 PPOLYPOINT true PENDPOLY PPAINT


 2.0 2.0 LW BK 249.0 851.0 311.0 851.0 PLINETO


 0.0 0.0 LW BK 225.0 869.0 PBEGPOLY


 249.0 865.0 PPOLYPOINT 249.0 869.0 PPOLYPOINT 249.0 874.0 PPOLYPOINT 225.0 869.0 PPOLYPOINT true PENDPOLY PPAINT


 2.0 2.0 LW BK 249.0 869.0 333.0 869.0 PLINETO


 0.0 0.0 LW BK 225.0 963.0 PBEGPOLY


 249.0 959.0 PPOLYPOINT 249.0 963.0 PPOLYPOINT 249.0 967.0 PPOLYPOINT 225.0 963.0 PPOLYPOINT true PENDPOLY PPAINT


 2.0 2.0 LW BK 249.0 963.0 355.0 963.0 PLINETO


 PEND


SURSTR
SUSAVE
/|______Courier 28 124 mul 497 div 660 16 0 SET
 225.0 506.0 900.0 1538.0 false PBEGIN


 <F87422478F172271> PDECLAREPATTERN


 S_TEXTSEGBEG
 833.0 200.0 964.0 200.0 PSCALETEXT 304 842 0.0000 0.0000
(1) 1 0 19 OUT
 S_TEXTSEGEND
 PEND


SURSTR
SUSAVE
/|______Courier 28 124 mul 497 div 660 16 0 SET
 225.0 506.0 900.0 1538.0 false PBEGIN


 <F87422478F172271> PDECLAREPATTERN


 S_TEXTSEGBEG
 833.0 200.0 964.0 200.0 PSCALETEXT 326 861 0.0000 0.0000
(2) 1 0 19 OUT
 S_TEXTSEGEND
 PEND


SURSTR
SUSAVE
/|______Courier 28 124 mul 497 div 660 16 0 SET
 225.0 506.0 900.0 1538.0 false PBEGIN


 <F87422478F172271> PDECLAREPATTERN


 S_TEXTSEGBEG
 833.0 200.0 964.0 200.0 PSCALETEXT 348 880 0.0000 0.0000
(4) 1 0 19 OUT
 S_TEXTSEGEND
 PEND


SURSTR
SUSAVE
/|______Courier 28 124 mul 497 div 660 16 0 SET
 225.0 506.0 900.0 1538.0 false PBEGIN


 <F87422478F172271> PDECLAREPATTERN


 S_TEXTSEGBEG
 833.0 200.0 964.0 200.0 PSCALETEXT 369 898 0.0000 0.0000
(8) 1 0 19 OUT
 S_TEXTSEGEND
 0.0 0.0 LW BK 225.0 907.0 PBEGPOLY


 249.0 903.0 PPOLYPOINT 249.0 907.0 PPOLYPOINT 249.0 911.0 PPOLYPOINT 225.0 907.0 PPOLYPOINT true PENDPOLY PPAINT


 2.0 2.0 LW BK 249.0 907.0 290.0 907.0 PLINETO


 0.0 0.0 LW BK 225.0 925.0 PBEGPOLY


 249.0 921.0 PPOLYPOINT 249.0 925.0 PPOLYPOINT 249.0 930.0 PPOLYPOINT 225.0 925.0 PPOLYPOINT true PENDPOLY PPAINT


 2.0 2.0 LW BK 249.0 925.0 311.0 925.0 PLINETO


 0.0 0.0 LW BK 225.0 944.0 PBEGPOLY


 249.0 940.0 PPOLYPOINT 249.0 944.0 PPOLYPOINT 249.0 948.0 PPOLYPOINT 225.0 944.0 PPOLYPOINT true PENDPOLY PPAINT


 2.0 2.0 LW BK 249.0 944.0 333.0 944.0 PLINETO


 0.0 0.0 LW BK 225.0 888.0 PBEGPOLY


 249.0 884.0 PPOLYPOINT 249.0 888.0 PPOLYPOINT 249.0 892.0 PPOLYPOINT 225.0 888.0 PPOLYPOINT true PENDPOLY PPAINT


 2.0 2.0 LW BK 249.0 888.0 355.0 888.0 PLINETO


 PEND


SURSTR
SUSAVE
/|______Courier 28 124 mul 497 div 660 16 0 SET
 225.0 506.0 900.0 1538.0 false PBEGIN


 <F87422478F172271> PDECLAREPATTERN


 S_TEXTSEGBEG
 833.0 200.0 964.0 200.0 PSCALETEXT 304 917 0.0000 0.0000
(1) 1 0 19 OUT
 S_TEXTSEGEND
 PEND


SURSTR
SUSAVE
/|______Courier 28 124 mul 497 div 660 16 0 SET
 225.0 506.0 900.0 1538.0 false PBEGIN


 <F87422478F172271> PDECLAREPATTERN


 S_TEXTSEGBEG
 833.0 200.0 964.0 200.0 PSCALETEXT 326 936 0.0000 0.0000
(2) 1 0 19 OUT
 S_TEXTSEGEND
 PEND


SURSTR
SUSAVE
/|______Courier 28 124 mul 497 div 660 16 0 SET
 225.0 506.0 900.0 1538.0 false PBEGIN


 <F87422478F172271> PDECLAREPATTERN


 S_TEXTSEGBEG
 833.0 200.0 964.0 200.0 PSCALETEXT 348 955 0.0000 0.0000
(4) 1 0 19 OUT
 S_TEXTSEGEND
 0.0 0.0 LW BK 225.0 720.0 PBEGPOLY


 249.0 716.0 PPOLYPOINT 249.0 720.0 PPOLYPOINT 249.0 724.0 PPOLYPOINT 225.0 720.0 PPOLYPOINT true PENDPOLY PPAINT


 2.0 2.0 LW BK 249.0 720.0 453.0 720.0 PLINETO


 PEND


SURSTR
false S_LOADFONT
(NewCenturySchlbk-Roman) FTRECODE
SUSAVE
/|______NewCenturySchlbk-Roman 28 124 mul 497 div 1100 16 0 SET
 225.0 506.0 900.0 1538.0 false PBEGIN


 <F87422478F172271> PDECLAREPATTERN


 S_TEXTSEGBEG
 833.0 200.0 964.0 200.0 PSCALETEXT 477 732 0.0000 0.0000
(INDEX  \(Deep Notch\)) 19 3 337 OUT
 S_TEXTSEGEND
 PEND


SURSTR
SUSAVE
/|______NewCenturySchlbk-Roman 28 124 mul 497 div 1100 16 0 SET
 225.0 506.0 900.0 1538.0 false PBEGIN


 <F87422478F172271> PDECLAREPATTERN


 S_TEXTSEGBEG
 833.0 200.0 964.0 200.0 PSCALETEXT 369 776 0.0000 0.0000
(DAY) 3 0 74 OUT
 S_TEXTSEGEND
 PEND


SURSTR
SUSAVE
/|______NewCenturySchlbk-Roman 28 124 mul 497 div 1100 16 0 SET
 225.0 506.0 900.0 1538.0 false PBEGIN


 <F87422478F172271> PDECLAREPATTERN


 S_TEXTSEGBEG
 833.0 200.0 964.0 200.0 PSCALETEXT 369 861 0.0000 0.0000
(MONTH) 5 0 136 OUT
 S_TEXTSEGEND
 PEND


SURSTR
SUSAVE
/|______NewCenturySchlbk-Roman 28 124 mul 497 div 1100 16 0 SET
 225.0 506.0 900.0 1538.0 false PBEGIN


 <F87422478F172271> PDECLAREPATTERN


 S_TEXTSEGBEG
 833.0 200.0 964.0 200.0 PSCALETEXT 369 936 0.0000 0.0000
(YEAR) 4 0 97 OUT
 S_TEXTSEGEND
 PEND


SURSTR
false S_LOADFONT
(NewCenturySchlbk-Bold) FTRECODE
SUSAVE
/|______NewCenturySchlbk-Bold 48 124 mul 497 div 1960 16 0 SET
 225.0 506.0 900.0 1538.0 false PBEGIN


 <F87422478F172271> PDECLAREPATTERN


 S_TEXTSEGBEG
 833.0 200.0 964.0 200.0 PSCALETEXT 287 624 0.0000 0.0000
(Beer Freshness) 14 1 461 OUT
 S_TEXTSEGEND
 PEND


SURSTR
SUSAVE
/|______NewCenturySchlbk-Bold 48 124 mul 497 div 1960 16 0 SET
 225.0 506.0 900.0 1538.0 false PBEGIN


 <F87422478F172271> PDECLAREPATTERN


 S_TEXTSEGBEG
 833.0 200.0 964.0 200.0 PSCALETEXT 360 674 0.0000 0.0000
(Calculator) 10 0 317 OUT
 S_TEXTSEGEND
 PEND


SURSTR
SUSAVE
/|______NewCenturySchlbk-Roman 36 124 mul 497 div 1420 16 0 SET
 225.0 506.0 900.0 1538.0 false PBEGIN


 <F87422478F172271> PDECLAREPATTERN


 S_TEXTSEGBEG
 833.0 200.0 964.0 200.0 PSCALETEXT 237 1119 0.0000 0.0000
(Align index with deep notch) 27 4 560 OUT
 S_TEXTSEGEND
 PEND


SURSTR
SUSAVE
/|______NewCenturySchlbk-Roman 36 124 mul 497 div 1420 16 0 SET
 225.0 506.0 900.0 1538.0 false PBEGIN


 <F87422478F172271> PDECLAREPATTERN


 S_TEXTSEGBEG
 833.0 200.0 964.0 200.0 PSCALETEXT 237 1160 0.0000 0.0000
(in label. Then add up total ) 28 6 542 OUT
 S_TEXTSEGEND
 PEND


SURSTR
SUSAVE
/|______NewCenturySchlbk-Roman 36 124 mul 497 div 1420 16 0 SET
 225.0 506.0 900.0 1538.0 false PBEGIN


 <F87422478F172271> PDECLAREPATTERN


 S_TEXTSEGBEG
 833.0 200.0 964.0 200.0 PSCALETEXT 237 1202 0.0000 0.0000
(values for notches within ) 26 4 515 OUT
 S_TEXTSEGEND
 PEND


SURSTR
SUSAVE
/|______NewCenturySchlbk-Roman 36 124 mul 497 div 1420 16 0 SET
 225.0 506.0 900.0 1538.0 false PBEGIN


 <F87422478F172271> PDECLAREPATTERN


 S_TEXTSEGBEG
 833.0 200.0 964.0 200.0 PSCALETEXT 237 1243 0.0000 0.0000
(day, month, and year areas.) 27 4 558 OUT
 S_TEXTSEGEND
 PEND


SURSTR
SUSAVE
/|______NewCenturySchlbk-Roman 36 124 mul 497 div 1420 16 0 SET
 225.0 506.0 900.0 1538.0 false PBEGIN


 <F87422478F172271> PDECLAREPATTERN


 S_TEXTSEGBEG
 833.0 200.0 964.0 200.0 PSCALETEXT 237 1285 0.0000 0.0000
(For instance, April 3, 1989 ) 28 5 544 OUT
 S_TEXTSEGEND
 PEND


SURSTR
SUSAVE
/|______NewCenturySchlbk-Roman 36 124 mul 497 div 1420 16 0 SET
 225.0 506.0 900.0 1538.0 false PBEGIN


 <F87422478F172271> PDECLAREPATTERN


 S_TEXTSEGBEG
 833.0 200.0 964.0 200.0 PSCALETEXT 237 1326 0.0000 0.0000
(would have day notches 1 ) 25 5 524 OUT
 S_TEXTSEGEND
 PEND


SURSTR
SUSAVE
/|______NewCenturySchlbk-Roman 36 124 mul 497 div 1420 16 0 SET
 225.0 506.0 900.0 1538.0 false PBEGIN


 <F87422478F172271> PDECLAREPATTERN


 S_TEXTSEGBEG
 833.0 200.0 964.0 200.0 PSCALETEXT 237 1368 0.0000 0.0000
(and 2, month notch 4 and ) 25 6 523 OUT
 S_TEXTSEGEND
 PEND


SURSTR
SUSAVE
/|______NewCenturySchlbk-Roman 36 124 mul 497 div 1420 16 0 SET
 225.0 506.0 900.0 1538.0 false PBEGIN


 <F87422478F172271> PDECLAREPATTERN


 S_TEXTSEGBEG
 833.0 200.0 964.0 200.0 PSCALETEXT 237 1409 0.0000 0.0000
(year notches 1 and 8.) 21 4 424 OUT
 S_TEXTSEGEND
 PEND


SURSTR
false S_LOADFONT
(ZapfChancery-MediumItalic) FTRECODE
SUSAVE
/|______ZapfChancery-MediumItalic 28 124 mul 497 div 980 16 0 SET
 225.0 506.0 900.0 1538.0 false PBEGIN


 <F87422478F172271> PDECLAREPATTERN


 S_TEXTSEGBEG
 833.0 200.0 964.0 200.0 PSCALETEXT 314 1451 0.0000 0.0000
(Copyright ) 10 1 124 OUT
save /SYMsv exch def
/Symbol 28 124 mul 497 div -999 16 0 SET
438 1451 0.0000 0.0000
(S) 1 0 25 OUT
SYMsv restore
463 1451 0.0000 0.0000
( 1989 Pete Soper) 16 3 198 OUT
 S_TEXTSEGEND
 PEND


SURSTR
SUSAVE
/|______NewCenturySchlbk-Bold 36 124 mul 497 div 1480 16 0 SET
 225.0 506.0 900.0 1538.0 false PBEGIN


 <F87422478F172271> PDECLAREPATTERN


 S_TEXTSEGBEG
 833.0 200.0 964.0 200.0 PSCALETEXT 249 1021 0.0000 0.0000
(Read The Date Codes of) 22 4 535 OUT
 S_TEXTSEGEND
 PEND


SURSTR
SUSAVE
/|______NewCenturySchlbk-Bold 36 124 mul 497 div 1480 16 0 SET
 225.0 506.0 900.0 1538.0 false PBEGIN


 <F87422478F172271> PDECLAREPATTERN


 S_TEXTSEGBEG
 833.0 200.0 964.0 200.0 PSCALETEXT 249 1062 0.0000 0.0000
(Certain Beer Labels:) 20 2 461 OUT
 S_TEXTSEGEND
 2.0 2.0 LW BK 225.0 506.0 895.0 506.0 PLINETO


 2.0 2.0 LW BK 895.0 506.0 895.0 1534.0 PLINETO


 2.0 2.0 LW BK 895.0 1534.0 225.0 1534.0 PLINETO


 2.0 2.0 LW BK 225.0 1534.0 225.0 1467.0 PLINETO


 2.0 2.0 LW BK 225.0 1467.0 830.0 1467.0 PLINETO


 2.0 2.0 LW BK 830.0 1467.0 830.0 570.0 PLINETO


 2.0 2.0 LW BK 830.0 570.0 225.0 570.0 PLINETO


 2.0 2.0 LW BK 225.0 570.0 225.0 506.0 PLINETO


 2.0 2.0 LW BK 225.0 570.0 225.0 712.0 PLINETO


 2.0 2.0 LW BK 225.0 973.0 225.0 1467.0 PLINETO


 PEND


 0.0 0.0 3300.0 2550.0 true PBEGIN


 <F87422478F172271> PDECLAREPATTERN


 0.0 0.0 LW WT 1389.0 105.0 2480.0 554.0 PRECT PPAINT


 PEND


ENDPAGE
ENDJOB
end
%%Trailer 
%%DocumentFonts: Courier
%%+ NewCenturySchlbk-Roman
%%+ NewCenturySchlbk-Bold
%%+ ZapfChancery-MediumItalic
%%DocumentSuppliedFonts: 
%%EOF 


From lexicon!rt`at`ursa-major.SPDCC.COM Thu Mar  1 11:52:26 1990
Received: Thu, 1 Mar 90 11:52:16 est from ursa-major.SPDCC.COM (ursa-major.spdcc.com.ARPA) by asylum.gsfc.nasa.gov (4.12/1.5)
Received: by ursa-major.SPDCC.COM with sendmail-5.61/4.7 
        id <AA23253`at`ursa-major.SPDCC.COM>; Thu, 1 Mar 90 11:52:34 -0500
Received: from fear.lexicon.com (fear.ARPA) by lexicon.lexicon.com
        id AA10253; Thu, 1 Mar 90 11:15:53 est
Received: by fear.lexicon.com
        id AA05889; Thu, 1 Mar 90 11:39:57 est
Date: Thu, 1 Mar 90 11:39:57 est
From: rt`at`lexicon.com (Robert Tillman)
Message-Id: <9003011639.AA05889`at`fear.lexicon.com>
To: chris`at`asylum.gsfc.nasa.gov
Subject: Recipe log sheet




Chris -


Could you please send me a copy in postscript?  Thanx!


 - Bob Tillman
rt`at`lexicon.com
...!harvard!spdcc!lexicon!rt


From `at`encore.encore.com:soper`at`maxzilla.encore.com Thu Mar  1 12:29:33 1990
Received: Thu, 1 Mar 90 12:29:20 est from encore.encore.com (815b010e) by asylum.gsfc.nasa.gov (4.12/1.5)
Received: from maxzilla.encore.COM by encore.encore.com with SMTP (5.61/25-eef)
        id AA03175; Thu, 1 Mar 90 12:31:11 -0500
Received: by maxzilla. (4.0/SMI-4.0)
        id AA31162; Thu, 1 Mar 90 12:34:22 EST
Date: Thu, 1 Mar 90 12:34:22 EST
From: Pete Soper <soper`at`maxzilla.encore.com>
Message-Id: <9003011734.AA31162`at`maxzilla.>
To: chris`at`asylum.gsfc.nasa.gov
Subject: I'm a bitter man :-)


Chris,


        I've been writing papers for my homebrew club's newsletter. Last month's
was the techie side of yeast while this month is the practical side. But thinking
ahead, I'd like to make something comprehensive about hop bitterness so more club
members can get a handle on their beer designs. Last night one club member told
me on the phone he was going to use a single ounce of 3.7% Saaz hops for bittering
a 10 GALLON BATCH OF BEER. Without choking or spluttering too much I suggested 
that that might well result in bitterness that was below the threshold
of taste and that perhaps more should be used! Anyway, you expressed an interest
in IBUs and so I thought you might like to read some very raw thoughts on the subject
and let me know what you think.
        I *really* like your recipe form, incidently. It seems to be a wonderful
balance between comprehensiveness and lack of clutter.


        Now for the rambling:


        David Line came up with AAU (Alpha Acid Unit) and it is simply defined as
one ounce of 1% alpha acid hops. Somebody in the AHA ripped this off and came up
with the HBU (Homebrew Bittering Unit). Both of these units convey potential
bitterness which was a good start for the late 70s but it is time for homebrewers
to move beyond this.
        Actual bitterness comes about by isomerization and subsequent solution of
alpha acids, ordinarily during the wort boil. The proportion of the starting alpha 
acids that end up dissolved represent a figure of merit called "hop utilization"
expressed as a percentage. Wort boils in commercial settings result in roughly 
27-34% utilization. Based on what I've read homebrewers only approach 30% utilization 
with best case boils. Randy Mosher suggests utilization in the mid twenties makes 
more sense for many homebrewers (for reasons discussed momentarily).
        So this is the dilemma. The above utilization estimate is the key to
mapping AAUs with the wort volume to a measure of dissolved acids. This measure is
called the IBU (International Bittering Unit), although the Europeans call it the
EBU. Both are defined as one milligram of isoalpha acid dissolved in one liter.
Commercial brewers directly measure the alpha acids and establish the real IBU
ratings for their beers. We don't have the equipment to do this, thus the dilemma.
        With 30% utilization, one AAU in one U.S. gallon results in 22.5 IBUs.
So, for example, 5 AAUs in a 5 gallon batch of beer made in such a way as to get
30% utilization would have a bitterness of 22.5 IBUs. Jackson's World Guide to
Beer is an excellent source for the bitterness of actual beers.
        A lot of factors affect utilization. One that is frequently a major one
in homebrew settings is the boil gravity. The higher the gravity of the wort during
a boil, the lower the utilization. That is, homebrewers that boil their
extract and hops in, for example, 2 gallons of water, have a boil gravity that
is around 5/2 of the eventual original gravity. Terry Foster suggests increasing
bittering hops by 5% for each 10 specific gravity points over 1.050 to compensate
for this.
        George Fix says that hop pellets result in 15% greater utilization than 
whole hops, all other things being equal.
        Wort pH has a drastic effect on utilization, but at pH levels that are
much higher than optimum. I don't have decent data about this but I know that at
a pH of around 10, utilization goes to almost 100%. Unfortunately, if your boil
was somehow at a pH of 10, you'd be in for some very very bad times.
        Certain minerals, especially gypsum, can affect extraction of bitterness.
I don't know how to quantify this.
        The length and vigor of the boil are the two remaining variables that 
homebrewers vary over wide ranges. I know homebrewers that have been brewing for
years that barely simmer their wort for no more than 20 minutes. I won't go into 
how their beer's clarity ranges from that of dish water to that of the Mississippi,
but I'm convinced that their hop utilization is drastically lower too. Commercial
brewers use boilers that are specifically designed to violently agitate the wort
during a 60-90 minute boil.
        So, a wort that starts the boil slightly *lower* than the eventual
original gravity, that is boiled very vigorously (i.e. leave out those goddamned
"pot watchers"!!!) for at least 60 minutes, probably approaches utilization levels
of 30%. Data from Miller's book suggests that utilization from 10 minutes of
vigorous boiling is around half what you get from 60 minutes. This feels about
right, since it is definitely very nonlinear (i.e. a 30 day boil would not get you
much over 35% utilization).
        Because all my boils fit the above criterion I guestimate my utilization 
is around 29% for 60 minutes, 24% fo


------------------------------


Date: 01 Mar 90 12:46:42 PST (Thu)
From: florianb`at`tekred.cna.tek.com
Subject: re:        #368, cooling, logging, and heading


In #368, tony g quotes Farnsworth's article in Zymurgy which claims that
inserting a submersible cooler substantially increases the chances of
wort contamination.  This is pure bullshit.  If the wort is hot and the
cooler is cleaner than a toilet, there is no problem.  This quote fuels
my previous claim that the world of brewing is full of rumors.


Max Newman inquires about head on his new beer.  Yes, Max, you should
wait a while.  The head and carbonation will improve.  I use 3/4 cup
of sugar in all my brews and get consistent carbonation results.  The
head varies depending on ingredients (see Miller's book).  The British
tend to like less "gassy" brews.


Chris Shenton submitted a log sheet in a particular type of format.  Two
comments: (1) Have you ever used a Macintosh?  (2) It would be preferrable
to send a message to HB DIG regarding the *availability* of the material,
rather than the LONG message containing the data.  The actual data could
be then sent to interested parties directly.  This would be much more
economical.  Please, no offense intended.  Your efforts are appreciated.
Incidentally, I use a log book I obtained at a business supply shop.


Florian the complainer.




------------------------------


Date: Thu, 1 Mar 90 13:57:51 PST
From: Marty Albini <hplabs!hpsdl39!martya>
Subject: beer pancakes


>Anyone have any good *food* recipes using beer as an ingredient?


        How about beer pancakes?




                dry stuff


        *1/4 cp oat flour
        *1/4 cp graham flour (a coursely ground whole wheat flour used
                for making graham crackers)
        *1/2 cp whole wheat pastry flour
                (1 cp total)
                -or-
        *1 cp whole wheat pastry flour


        1/2 tsp baking powder (use 3/4 tsp of the non-alum kind)
        1/2 tsp baking soda
        1/2 tsp salt
        1 heaping tbl dry malt extract
        1 heaping tbl health-food store brewer's yeast


optional:
        1 tbl sesame seeds


                wet stuff


        1 cp bland, boring, light beer, easy on the hops (unless you
                want to eat the whole batch yourself)
        1 1/2 tsp lemon juice (1 good squeeze of 1/2 a lemon)
        1/2 stick butter/margarine 




        Set margarine in the frying pan to melt. Mix dry ingrediants
in one bowl, wet in another. Add the melted butter to the wet and mix
well just before stirring in dry stuff. If you want skinnier pancakes,
thin batter with beer.


        Serves two. You might want to make a double batch, as this
leaves 1/2 a can of bad beer sitting around, and I for one don't drink
before breakfast, and if I did, I wouldn't drink this stuff.


        If the beer isn't flat, you can reduce the baking powder and
soda. The lemon juice is just to react with the soda, so that can go
away too. If you use fresh beer, the above makes very light and 
fluffy pancakes.


        Enjoy!
- --
________________________________________________Marty Albini___________
"Thank god for long-necked bottles, the angel's remedy."--Tom Petty
phone    : (619) 592-4177
UUCP     : {hplabs|nosc|hpfcla|ucsd}!hp-sdd!martya
Internet : martya%hp-sdd`at`hp-sde.sde.hp.com (or `at`nosc.mil, `at`ucsd.edu)
CSNET    : martya%hp-sdd`at`hplabs.csnet
US mail  : Hewlett-Packard Co., 16399 W. Bernardo Drive, San Diego CA 92127-1899 USA


------------------------------


Date: Thu, 1 Mar 90 20:19:06 MST
From: roberts`at`studguppy (Doug Roberts `at` Los Alamos National Laboratory)
Subject: immersion-type wort chiller (concern)


> From: tony g <giannone`at`BBN.COM>
> 
> I was thumbing through my Zymurgy "Yeast & Beer" (1989 special issue) last
> night when I came upon an interesting statement in Paul Farnsworth's
> "Healthy Homebrew Starter Cultures" article. On page 11 Mr. Farnsworth says
> "Cooling the wort before transferring it to the fermenter, using ice
> immersion or a copper cooling coil placed inside the boiling pot vastly
> increases the chance of contamination."        
> 
> I thought that using an immersion-type wort chiller would vastly 'decrease'
> the chance of contamination since it allows the yeast to be added sooner.
> Is Mr. Farnsworth assuming that the wort chiller is being place in the
> wort 'after the boil' instead of 'during the last 10-15 minutes'?


I was disappointed with that article. I completely disagree with
Farnsworth's contention that an immersion chiller coil increases the
chance for contamination. Ice immersion, of course, would be a
completely different story. However, if you practice healthy
sanitation procedures with your primary, and let the immersion coil
rest in the boiling wort for 10 - 15 minutes prior to starting the
flow of cooling water, there is no additional risk of contamination.


- --Doug


================================================================
Douglas Roberts                |
Los Alamos National Laboratory |I can resist anything
Box 1663, MS F-609             |  except temptation.
Los Alamos, New Mexico 87545   |  ...
(505)667-4569                  |Oscar Wilde
dzzr`at`lanl.gov                  |
================================================================


------------------------------


Date: Thu, 1 Mar 90 20:22:51 -0800
From: John S. Watson <watson`at`ames.arc.nasa.gov>
Subject: Re: Recipes of a different nature




In HOMEBREW Digest #368        Mark.Leone`at`F.GP.CS.CMU.EDU writes:
> Anyone have any good *food* recipes using beer as an ingredient?  I've
> had good beer-batter fried chicken, and now my curiosity is piqued!


Here a cookbook I found recently at B. Dalton's Book store:


Brew Cuisine: Cooking with Beer 
by Judith Gould and Ruth Koretsky
Summerhill Press, 1989
192 pages, $9.95


Other information from the inner leaf:
Printed in Canada, Distributed in the United States by:
Sterling Publishing
2 Park Avenue
New York, New York 10016
ISBN 0-920197-73-6


I've only made a few of the recipes in the book ... mainly the stews.
There are recipes for: 
           appetizers, 
           bread, 
           sauces, marinades & salad dressings;
           soups; vegetables,
           eggs & cheese,
           fish & seafood,
           poultry,
           beef, lamb & veal,
           pork,
           desserts.


Some of the recipes seem kind of bogus, because they require only a teaspoon
or so of beer.  (Maybe it's just an excuse to have to dispose of 
a little less than 12oz or beer :-).


But some recipes require goodly portions , 
as much as 4 cups, "Traditional Carbonnade".


There is also a lot of beer and brewing history and lore mixed in 
between the recipes.


have fun,
John




------------------------------




End of HOMEBREW Digest #369, 03/02/90
*************************************
-------